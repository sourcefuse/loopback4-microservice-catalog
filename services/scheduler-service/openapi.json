{
  "openapi": "3.0.0",
  "info": {
    "title": "Scheduler Service",
    "version": "1.0.0",
    "description": "services",
    "contact": {
      "name": "Sourcefuse"
    }
  },
  "paths": {
    "/attachments/count": {
      "get": {
        "x-controller-name": "AttachmentController",
        "x-operation-name": "count",
        "tags": [
          "AttachmentController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "attachments.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Attachment>"
                }
              }
            }
          }
        ],
        "operationId": "AttachmentController.count"
      }
    },
    "/attachments/{id}": {
      "put": {
        "x-controller-name": "AttachmentController",
        "x-operation-name": "replaceById",
        "tags": [
          "AttachmentController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Attachment PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AttachmentController.replaceById"
      },
      "patch": {
        "x-controller-name": "AttachmentController",
        "x-operation-name": "updateById",
        "tags": [
          "AttachmentController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Attachment PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AttachmentController.updateById"
      },
      "get": {
        "x-controller-name": "AttachmentController",
        "x-operation-name": "findById",
        "tags": [
          "AttachmentController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/attachments.Filter"
                }
              }
            }
          }
        ],
        "operationId": "AttachmentController.findById"
      },
      "delete": {
        "x-controller-name": "AttachmentController",
        "x-operation-name": "deleteById",
        "tags": [
          "AttachmentController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Attachment DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "AttachmentController.deleteById"
      }
    },
    "/attachments": {
      "post": {
        "x-controller-name": "AttachmentController",
        "x-operation-name": "create",
        "tags": [
          "AttachmentController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAttachment"
              }
            }
          }
        },
        "operationId": "AttachmentController.create"
      },
      "patch": {
        "x-controller-name": "AttachmentController",
        "x-operation-name": "updateAll",
        "tags": [
          "AttachmentController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "attachments.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Attachment>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentPartial"
              }
            }
          }
        },
        "operationId": "AttachmentController.updateAll"
      },
      "get": {
        "x-controller-name": "AttachmentController",
        "x-operation-name": "find",
        "tags": [
          "AttachmentController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Attachment model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/attachments.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "AttachmentController.find"
      }
    },
    "/attendees/count": {
      "get": {
        "x-controller-name": "AttendeeController",
        "x-operation-name": "count",
        "tags": [
          "AttendeeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attendee model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "attendees.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Attendee>"
                }
              }
            }
          }
        ],
        "operationId": "AttendeeController.count"
      }
    },
    "/attendees/{id}": {
      "put": {
        "x-controller-name": "AttendeeController",
        "x-operation-name": "replaceById",
        "tags": [
          "AttendeeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Attendee PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attendee"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AttendeeController.replaceById"
      },
      "patch": {
        "x-controller-name": "AttendeeController",
        "x-operation-name": "updateById",
        "tags": [
          "AttendeeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Attendee PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttendeePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AttendeeController.updateById"
      },
      "get": {
        "x-controller-name": "AttendeeController",
        "x-operation-name": "findById",
        "tags": [
          "AttendeeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attendee model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendeeWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/attendees.Filter"
                }
              }
            }
          }
        ],
        "operationId": "AttendeeController.findById"
      },
      "delete": {
        "x-controller-name": "AttendeeController",
        "x-operation-name": "deleteById",
        "tags": [
          "AttendeeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Attendee DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "AttendeeController.deleteById"
      }
    },
    "/attendees": {
      "post": {
        "x-controller-name": "AttendeeController",
        "x-operation-name": "create",
        "tags": [
          "AttendeeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attendee model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attendee"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAttendee"
              }
            }
          }
        },
        "operationId": "AttendeeController.create"
      },
      "patch": {
        "x-controller-name": "AttendeeController",
        "x-operation-name": "updateAll",
        "tags": [
          "AttendeeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Attendee PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "attendees.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Attendee>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttendeePartial"
              }
            }
          }
        },
        "operationId": "AttendeeController.updateAll"
      },
      "get": {
        "x-controller-name": "AttendeeController",
        "x-operation-name": "find",
        "tags": [
          "AttendeeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Attendee model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttendeeWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/attendees.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "AttendeeController.find"
      }
    },
    "/calendars/calendarSubscription": {
      "post": {
        "x-controller-name": "CalendarController",
        "x-operation-name": "createWithSubscription",
        "tags": [
          "CalendarController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarDTO"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCalendar"
              }
            }
          }
        },
        "operationId": "CalendarController.createWithSubscription"
      }
    },
    "/calendars/count": {
      "get": {
        "x-controller-name": "CalendarController",
        "x-operation-name": "count",
        "tags": [
          "CalendarController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "calendars.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Calendar>"
                }
              }
            }
          }
        ],
        "operationId": "CalendarController.count"
      }
    },
    "/calendars/subscriptions/me": {
      "get": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "findMe",
        "tags": [
          "SubscriptionController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Subscription model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptions.Filter"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionController.findMe"
      }
    },
    "/calendars/{id}/events": {
      "post": {
        "x-controller-name": "CalendarEventController",
        "x-operation-name": "create",
        "tags": [
          "CalendarEventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewEventInCalendar"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CalendarEventController.create"
      },
      "patch": {
        "x-controller-name": "CalendarEventController",
        "x-operation-name": "patch",
        "tags": [
          "CalendarEventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar.Event PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "events.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Event>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CalendarEventController.patch"
      },
      "get": {
        "x-controller-name": "CalendarEventController",
        "x-operation-name": "find",
        "tags": [
          "CalendarEventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Calendar has many Event",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          {
            "name": "timeMax",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "timeMin",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "operationId": "CalendarEventController.find"
      },
      "delete": {
        "x-controller-name": "CalendarEventController",
        "x-operation-name": "delete",
        "tags": [
          "CalendarEventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar.Event DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "events.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Event>"
                }
              }
            }
          }
        ],
        "operationId": "CalendarEventController.delete"
      }
    },
    "/calendars/{id}/subscriptions": {
      "post": {
        "x-controller-name": "CalendarSubscriptionController",
        "x-operation-name": "create",
        "tags": [
          "CalendarSubscriptionController"
        ],
        "description": "This is an api to create a calendar subscription for any calendar.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSubscriptionInCalendar"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CalendarSubscriptionController.create"
      },
      "patch": {
        "x-controller-name": "CalendarSubscriptionController",
        "x-operation-name": "patch",
        "tags": [
          "CalendarSubscriptionController"
        ],
        "description": "This api is to update the calendar subscription by passing an `id`. \n      This action will be allowed only to the owner of the calendar or the admin.\n      To identify the `owner` we will check for the email passed in the token and \n      the corresponding access level, whereas to identify the admin we will check \n      for the permission.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar.Subscription PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "subscriptions.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Subscription>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CalendarSubscriptionController.patch"
      },
      "get": {
        "x-controller-name": "CalendarSubscriptionController",
        "x-operation-name": "find",
        "tags": [
          "CalendarSubscriptionController"
        ],
        "description": "These requests will be available to the owner of the subscription.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Calendar has many Subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "CalendarSubscriptionController.find"
      },
      "delete": {
        "x-controller-name": "CalendarSubscriptionController",
        "x-operation-name": "delete",
        "tags": [
          "CalendarSubscriptionController"
        ],
        "description": "This api is to update the calendar subscription by passing an id. \n      This action will be allowed only to the owner of the calendar or the admin. \n      To identify the ‘owner’ we will check for the email passed in the token and the \n      corresponding access level, whereas to identify the admin we will check for the permission.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar.Subscription DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "subscriptions.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Subscription>"
                }
              }
            }
          }
        ],
        "operationId": "CalendarSubscriptionController.delete"
      }
    },
    "/calendars/{id}/working-hours": {
      "post": {
        "x-controller-name": "CalendarWorkingHourController",
        "x-operation-name": "create",
        "tags": [
          "CalendarWorkingHourController"
        ],
        "description": "This is an api to create a calendar for any user.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHour"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewWorkingHourInCalendar"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CalendarWorkingHourController.create"
      },
      "patch": {
        "x-controller-name": "CalendarWorkingHourController",
        "x-operation-name": "patch",
        "tags": [
          "CalendarWorkingHourController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar.WorkingHour PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "working_hours.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<WorkingHour>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingHourPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CalendarWorkingHourController.patch"
      },
      "get": {
        "x-controller-name": "CalendarWorkingHourController",
        "x-operation-name": "find",
        "tags": [
          "CalendarWorkingHourController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Calendar has many WorkingHour",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkingHour"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "CalendarWorkingHourController.find"
      },
      "delete": {
        "x-controller-name": "CalendarWorkingHourController",
        "x-operation-name": "delete",
        "tags": [
          "CalendarWorkingHourController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar.WorkingHour DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "working_hours.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<WorkingHour>"
                }
              }
            }
          }
        ],
        "operationId": "CalendarWorkingHourController.delete"
      }
    },
    "/calendars/{id}": {
      "put": {
        "x-controller-name": "CalendarController",
        "x-operation-name": "replaceById",
        "tags": [
          "CalendarController"
        ],
        "description": "This api is to update the calendar by passing an id. This action will be allowed only to \n      the owner of the calendar or the admin. To identify the ‘owner’ we will check for the email \n      passed in the token and the corresponding access level, whereas to identify the admin we will \n      check for the permission.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Calendar PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarDTO"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CalendarController.replaceById"
      },
      "patch": {
        "x-controller-name": "CalendarController",
        "x-operation-name": "updateById",
        "tags": [
          "CalendarController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Calendar PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "CalendarController.updateById"
      },
      "get": {
        "x-controller-name": "CalendarController",
        "x-operation-name": "findById",
        "tags": [
          "CalendarController"
        ],
        "description": "These requests will be available to everyone in the event to look at.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/calendars.Filter"
                }
              }
            }
          }
        ],
        "operationId": "CalendarController.findById"
      },
      "delete": {
        "x-controller-name": "CalendarController",
        "x-operation-name": "deleteById",
        "tags": [
          "CalendarController"
        ],
        "description": "This api is to update the calendar by passing an id. This action will be allowed only to the \n      owner of the calendar or the admin. To identify the ‘owner’ we will check for the email \n      passed in the token and the corresponding access level, whereas to identify the admin we will \n      check for the permission.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Calendar DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "CalendarController.deleteById"
      }
    },
    "/calendars": {
      "post": {
        "x-controller-name": "CalendarController",
        "x-operation-name": "create",
        "tags": [
          "CalendarController"
        ],
        "description": "This is an api to create a calendar for any user. \n      Recommendation: Use this while adding a user to the main application, in order to create \n      a primary calendar for that particular user.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calendar"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCalendar"
              }
            }
          }
        },
        "operationId": "CalendarController.create"
      },
      "patch": {
        "x-controller-name": "CalendarController",
        "x-operation-name": "updateAll",
        "tags": [
          "CalendarController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "calendars.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Calendar>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarPartial"
              }
            }
          }
        },
        "operationId": "CalendarController.updateAll"
      },
      "get": {
        "x-controller-name": "CalendarController",
        "x-operation-name": "find",
        "tags": [
          "CalendarController"
        ],
        "description": "These requests will be available to everyone in the event to look at.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Calendar model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalendarWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/calendars.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "CalendarController.find"
      }
    },
    "/events/count": {
      "get": {
        "x-controller-name": "EventController",
        "x-operation-name": "count",
        "tags": [
          "EventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "events.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Event>"
                }
              }
            }
          }
        ],
        "operationId": "EventController.count"
      }
    },
    "/events/freeBusy": {
      "get": {
        "x-controller-name": "EventController",
        "x-operation-name": "getFeeBusyStatus",
        "tags": [
          "EventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event model freeBusy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeBusyRequest"
              }
            }
          }
        },
        "operationId": "EventController.getFeeBusyStatus"
      }
    },
    "/events/{id}/attachments": {
      "post": {
        "x-controller-name": "EventAttachmentController",
        "x-operation-name": "create",
        "tags": [
          "EventAttachmentController"
        ],
        "description": "Organizer can add attachments to the event (if it was missed while creating event).",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAttachmentInEvent"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "EventAttachmentController.create"
      },
      "patch": {
        "x-controller-name": "EventAttachmentController",
        "x-operation-name": "patch",
        "tags": [
          "EventAttachmentController"
        ],
        "description": "Organizer can update details of the attachment.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event.Attachment PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "attachments.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Attachment>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "EventAttachmentController.patch"
      },
      "get": {
        "x-controller-name": "EventAttachmentController",
        "x-operation-name": "find",
        "tags": [
          "EventAttachmentController"
        ],
        "description": "These requests will be available to everyone in the event to look at.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Event has many Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Attachment"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "EventAttachmentController.find"
      },
      "delete": {
        "x-controller-name": "EventAttachmentController",
        "x-operation-name": "delete",
        "tags": [
          "EventAttachmentController"
        ],
        "description": "Organizer can delete the attachment.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event.Attachment DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "attachments.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Attachment>"
                }
              }
            }
          }
        ],
        "operationId": "EventAttachmentController.delete"
      }
    },
    "/events/{id}/attendees": {
      "post": {
        "x-controller-name": "EventAttendeeController",
        "x-operation-name": "create",
        "tags": [
          "EventAttendeeController"
        ],
        "description": "Attendees could be added to the event. This action could only be performed by the organizer",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attendee"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAttendeeInEvent"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "EventAttendeeController.create"
      },
      "patch": {
        "x-controller-name": "EventAttendeeController",
        "x-operation-name": "patch",
        "tags": [
          "EventAttendeeController"
        ],
        "description": "Attendees can update details here. (Mainly accept or reject the invitation)",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event.Attendee PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "attendees.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Attendee>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttendeePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "EventAttendeeController.patch"
      },
      "get": {
        "x-controller-name": "EventAttendeeController",
        "x-operation-name": "find",
        "tags": [
          "EventAttendeeController"
        ],
        "description": "Attendees are visible to everyone according to the access permissions provided to them.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Event has many Attendee",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Attendee"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "EventAttendeeController.find"
      },
      "delete": {
        "x-controller-name": "EventAttendeeController",
        "x-operation-name": "delete",
        "tags": [
          "EventAttendeeController"
        ],
        "description": "Organiser is allowed to delete an attendee of an event. Event participants details from the past could not be created or updated.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event.Attendee DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "attendees.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Attendee>"
                }
              }
            }
          }
        ],
        "operationId": "EventAttendeeController.delete"
      }
    },
    "/events/{id}/hard": {
      "delete": {
        "x-controller-name": "EventController",
        "x-operation-name": "hardDeleteById",
        "tags": [
          "EventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Event HARD DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "EventController.hardDeleteById"
      }
    },
    "/events/{id}": {
      "put": {
        "x-controller-name": "EventController",
        "x-operation-name": "replaceById",
        "tags": [
          "EventController"
        ],
        "description": "This api will be responsible for making any updates on an event. This action is only allowed to the organizer or the admin(based on permission).",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Event PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "EventController.replaceById"
      },
      "patch": {
        "x-controller-name": "EventController",
        "x-operation-name": "updateById",
        "tags": [
          "EventController"
        ],
        "description": "This api will be responsible for making any updates on an event. This action is only allowed to the organizer or the admin(based on permission).",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Event PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "EventController.updateById"
      },
      "get": {
        "x-controller-name": "EventController",
        "x-operation-name": "findById",
        "tags": [
          "EventController"
        ],
        "description": "This api will return events data based on the id. Sending the data of participants will be optional and will depend on the query.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events.Filter"
                }
              }
            }
          }
        ],
        "operationId": "EventController.findById"
      },
      "delete": {
        "x-controller-name": "EventController",
        "x-operation-name": "deleteById",
        "tags": [
          "EventController"
        ],
        "description": "Api to delete the event based on id. The action is only allowed to the organiser or the admin(based on permission).",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Event DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "EventController.deleteById"
      }
    },
    "/events": {
      "post": {
        "x-controller-name": "EventController",
        "x-operation-name": "create",
        "tags": [
          "EventController"
        ],
        "description": "While an organizer creates an event, we get participants details along with it. \n      This api will check for slot availability of all the participants in that particular \n      time slot. If the slot is free the event will be created. Events can be scheduled on \n      behalf of someone else, In this case we will be saving the creator details \n      (generally the organiser is the creator themselves, so we will be keeping the organiser \n        and created_by the same).",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewEvent"
              }
            }
          }
        },
        "operationId": "EventController.create"
      },
      "patch": {
        "x-controller-name": "EventController",
        "x-operation-name": "updateAll",
        "tags": [
          "EventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "events.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Event>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPartial"
              }
            }
          }
        },
        "operationId": "EventController.updateAll"
      },
      "get": {
        "x-controller-name": "EventController",
        "x-operation-name": "find",
        "tags": [
          "EventController"
        ],
        "description": "This api will return the events data, based on the filter provided. Sending the data of participants will be optional and will depend on the query.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Event model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events_attendees_view.Filter"
                }
              }
            }
          }
        ],
        "operationId": "EventController.find"
      }
    },
    "/settings/count": {
      "get": {
        "x-controller-name": "SettingsController",
        "x-operation-name": "count",
        "tags": [
          "SettingsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Settings model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "settings.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Settings>"
                }
              }
            }
          }
        ],
        "operationId": "SettingsController.count"
      }
    },
    "/settings/{id}": {
      "put": {
        "x-controller-name": "SettingsController",
        "x-operation-name": "replaceById",
        "tags": [
          "SettingsController"
        ],
        "description": "Update setting.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Settings PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Settings"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SettingsController.replaceById"
      },
      "patch": {
        "x-controller-name": "SettingsController",
        "x-operation-name": "updateById",
        "tags": [
          "SettingsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Settings PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SettingsController.updateById"
      },
      "get": {
        "x-controller-name": "SettingsController",
        "x-operation-name": "findById",
        "tags": [
          "SettingsController"
        ],
        "description": "These requests will be available to everyone in the setting to look at.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Settings model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settings.Filter"
                }
              }
            }
          }
        ],
        "operationId": "SettingsController.findById"
      },
      "delete": {
        "x-controller-name": "SettingsController",
        "x-operation-name": "deleteById",
        "tags": [
          "SettingsController"
        ],
        "description": "Delete setting.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Settings DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "SettingsController.deleteById"
      }
    },
    "/settings": {
      "post": {
        "x-controller-name": "SettingsController",
        "x-operation-name": "create",
        "tags": [
          "SettingsController"
        ],
        "description": "Create any new settings",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Settings model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSettings"
              }
            }
          }
        },
        "operationId": "SettingsController.create"
      },
      "patch": {
        "x-controller-name": "SettingsController",
        "x-operation-name": "updateAll",
        "tags": [
          "SettingsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Settings PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "settings.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Settings>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsPartial"
              }
            }
          }
        },
        "operationId": "SettingsController.updateAll"
      },
      "get": {
        "x-controller-name": "SettingsController",
        "x-operation-name": "find",
        "tags": [
          "SettingsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Settings model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingsWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settings.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "SettingsController.find"
      }
    },
    "/subscriptions/count": {
      "get": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "count",
        "tags": [
          "SubscriptionController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "subscriptions.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Subscription>"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionController.count"
      }
    },
    "/subscriptions/{id}": {
      "put": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "replaceById",
        "tags": [
          "SubscriptionController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Subscription PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SubscriptionController.replaceById"
      },
      "patch": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "updateById",
        "tags": [
          "SubscriptionController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Subscription PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SubscriptionController.updateById"
      },
      "get": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "findById",
        "tags": [
          "SubscriptionController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptions.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionController.findById"
      },
      "delete": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "deleteById",
        "tags": [
          "SubscriptionController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Subscription DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "SubscriptionController.deleteById"
      }
    },
    "/subscriptions": {
      "post": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "create",
        "tags": [
          "SubscriptionController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSubscription"
              }
            }
          }
        },
        "operationId": "SubscriptionController.create"
      },
      "patch": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "updateAll",
        "tags": [
          "SubscriptionController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "subscriptions.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Subscription>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPartial"
              }
            }
          }
        },
        "operationId": "SubscriptionController.updateAll"
      },
      "get": {
        "x-controller-name": "SubscriptionController",
        "x-operation-name": "find",
        "tags": [
          "SubscriptionController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Subscription model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptions.Filter"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionController.find"
      }
    },
    "/themes/count": {
      "get": {
        "x-controller-name": "ThemeController",
        "x-operation-name": "count",
        "tags": [
          "ThemeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Theme model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "themes.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Theme>"
                }
              }
            }
          }
        ],
        "operationId": "ThemeController.count"
      }
    },
    "/themes/{id}": {
      "put": {
        "x-controller-name": "ThemeController",
        "x-operation-name": "replaceById",
        "tags": [
          "ThemeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Theme PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ThemeController.replaceById"
      },
      "patch": {
        "x-controller-name": "ThemeController",
        "x-operation-name": "updateById",
        "tags": [
          "ThemeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Theme PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ThemeController.updateById"
      },
      "get": {
        "x-controller-name": "ThemeController",
        "x-operation-name": "findById",
        "tags": [
          "ThemeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Theme model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/themes.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ThemeController.findById"
      },
      "delete": {
        "x-controller-name": "ThemeController",
        "x-operation-name": "deleteById",
        "tags": [
          "ThemeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Theme DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ThemeController.deleteById"
      }
    },
    "/themes": {
      "post": {
        "x-controller-name": "ThemeController",
        "x-operation-name": "create",
        "tags": [
          "ThemeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Theme model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTheme"
              }
            }
          }
        },
        "operationId": "ThemeController.create"
      },
      "patch": {
        "x-controller-name": "ThemeController",
        "x-operation-name": "updateAll",
        "tags": [
          "ThemeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Theme PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "themes.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Theme>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemePartial"
              }
            }
          }
        },
        "operationId": "ThemeController.updateAll"
      },
      "get": {
        "x-controller-name": "ThemeController",
        "x-operation-name": "find",
        "tags": [
          "ThemeController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Theme model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThemeWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/themes.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ThemeController.find"
      }
    },
    "/working-hours/count": {
      "get": {
        "x-controller-name": "WorkingHourController",
        "x-operation-name": "count",
        "tags": [
          "WorkingHourController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "WorkingHour model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "working_hours.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<WorkingHour>"
                }
              }
            }
          }
        ],
        "operationId": "WorkingHourController.count"
      }
    },
    "/working-hours/{id}": {
      "put": {
        "x-controller-name": "WorkingHourController",
        "x-operation-name": "replaceById",
        "tags": [
          "WorkingHourController"
        ],
        "description": "This api is to update the calendar by passing an `id`. This action will be allowed only \n      to the owner of the calendar or the admin. To identify the `owner` we \n      will check for the email passed in the token and the corresponding access level, \n      whereas to identify the admin we will check for the permission.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "WorkingHour PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingHour"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "WorkingHourController.replaceById"
      },
      "patch": {
        "x-controller-name": "WorkingHourController",
        "x-operation-name": "updateById",
        "tags": [
          "WorkingHourController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "WorkingHour PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingHourPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "WorkingHourController.updateById"
      },
      "get": {
        "x-controller-name": "WorkingHourController",
        "x-operation-name": "findById",
        "tags": [
          "WorkingHourController"
        ],
        "description": "These requests will be available to everyone to look at. This will be represent the work timings for the owner of the calendar.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "WorkingHour model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHourWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/working_hours.Filter"
                }
              }
            }
          }
        ],
        "operationId": "WorkingHourController.findById"
      },
      "delete": {
        "x-controller-name": "WorkingHourController",
        "x-operation-name": "deleteById",
        "tags": [
          "WorkingHourController"
        ],
        "description": "This api is to update the calendar by passing an `id`. This action will \n      be allowed only to the owner of the calendar or the admin. To identify the ‘owner’ \n      we will check for the email passed in the token and the corresponding access level, \n      whereas to identify the admin we will check for the permission.",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "WorkingHour DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "WorkingHourController.deleteById"
      }
    },
    "/working-hours": {
      "post": {
        "x-controller-name": "WorkingHourController",
        "x-operation-name": "create",
        "tags": [
          "WorkingHourController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "WorkingHour model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkingHour"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewWorkingHour"
              }
            }
          }
        },
        "operationId": "WorkingHourController.create"
      },
      "patch": {
        "x-controller-name": "WorkingHourController",
        "x-operation-name": "updateAll",
        "tags": [
          "WorkingHourController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "WorkingHour PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "working_hours.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<WorkingHour>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkingHourPartial"
              }
            }
          }
        },
        "operationId": "WorkingHourController.updateAll"
      },
      "get": {
        "x-controller-name": "WorkingHourController",
        "x-operation-name": "find",
        "tags": [
          "WorkingHourController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of WorkingHour model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkingHourWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/working_hours.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "WorkingHourController.find"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Attachment": {
        "title": "Attachment",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "iconLink": {
            "type": "string"
          },
          "mimeType": {
            "type": "string",
            "maxLength": 200
          },
          "title": {
            "type": "string",
            "maxLength": 400
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "fileUrl",
          "eventId"
        ],
        "additionalProperties": false
      },
      "NewAttachment": {
        "title": "NewAttachment",
        "type": "object",
        "description": "(tsType: Omit<Attachment, 'id'>, schemaOptions: { title: 'NewAttachment', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "iconLink": {
            "type": "string"
          },
          "mimeType": {
            "type": "string",
            "maxLength": 200
          },
          "title": {
            "type": "string",
            "maxLength": 400
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "fileUrl",
          "eventId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Attachment, 'id'>"
      },
      "AttendeeWithRelations": {
        "title": "AttendeeWithRelations",
        "type": "object",
        "description": "(tsType: AttendeeWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "isOptional": {
            "type": "boolean"
          },
          "isOrganizer": {
            "type": "boolean"
          },
          "messages": {
            "type": "string"
          },
          "responseStatus": {
            "type": "string",
            "enum": [
              "needsAction",
              "tentative",
              "accepted",
              "declined"
            ]
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          },
          "event": {
            "$ref": "#/components/schemas/EventWithRelations"
          }
        },
        "required": [
          "identifier",
          "eventId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "AttendeeWithRelations"
      },
      "EventWithRelations": {
        "title": "EventWithRelations",
        "type": "object",
        "description": "(tsType: EventWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "bgColor": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "fgColor": {
            "type": "string"
          },
          "iCalUid": {
            "type": "string"
          },
          "isFullDayEvent": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "link": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "maxLength": 300
          },
          "meetingLink": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "confirmed",
              "tentative",
              "cancelled",
              "completed"
            ]
          },
          "summary": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "parentEventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          },
          "calendar": {
            "$ref": "#/components/schemas/CalendarWithRelations"
          },
          "parentEvent": {
            "$ref": "#/components/schemas/EventWithRelations"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendeeWithRelations"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentWithRelations"
            }
          }
        },
        "required": [
          "calendarId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "EventWithRelations"
      },
      "AttachmentWithRelations": {
        "title": "AttachmentWithRelations",
        "type": "object",
        "description": "(tsType: AttachmentWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "iconLink": {
            "type": "string"
          },
          "mimeType": {
            "type": "string",
            "maxLength": 200
          },
          "title": {
            "type": "string",
            "maxLength": 400
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          },
          "event": {
            "$ref": "#/components/schemas/EventWithRelations"
          }
        },
        "required": [
          "fileUrl",
          "eventId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "AttachmentWithRelations"
      },
      "AttachmentPartial": {
        "title": "AttachmentPartial",
        "type": "object",
        "description": "(tsType: Partial<Attachment>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "iconLink": {
            "type": "string"
          },
          "mimeType": {
            "type": "string",
            "maxLength": 200
          },
          "title": {
            "type": "string",
            "maxLength": 400
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Attachment>"
      },
      "Attendee": {
        "title": "Attendee",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "isOptional": {
            "type": "boolean"
          },
          "isOrganizer": {
            "type": "boolean"
          },
          "messages": {
            "type": "string"
          },
          "responseStatus": {
            "type": "string",
            "enum": [
              "needsAction",
              "tentative",
              "accepted",
              "declined"
            ]
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "identifier",
          "eventId"
        ],
        "additionalProperties": false
      },
      "NewAttendee": {
        "title": "NewAttendee",
        "type": "object",
        "description": "(tsType: Omit<Attendee, 'id'>, schemaOptions: { title: 'NewAttendee', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "isOptional": {
            "type": "boolean"
          },
          "isOrganizer": {
            "type": "boolean"
          },
          "messages": {
            "type": "string"
          },
          "responseStatus": {
            "type": "string",
            "enum": [
              "needsAction",
              "tentative",
              "accepted",
              "declined"
            ]
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "identifier",
          "eventId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Attendee, 'id'>"
      },
      "AttendeePartial": {
        "title": "AttendeePartial",
        "type": "object",
        "description": "(tsType: Partial<Attendee>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "isOptional": {
            "type": "boolean"
          },
          "isOrganizer": {
            "type": "boolean"
          },
          "messages": {
            "type": "string"
          },
          "responseStatus": {
            "type": "string",
            "enum": [
              "needsAction",
              "tentative",
              "accepted",
              "declined"
            ]
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Attendee>"
      },
      "Calendar": {
        "title": "Calendar",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "enableWorkingHours": {
            "type": "boolean"
          },
          "location": {
            "type": "string",
            "maxLength": 300
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "summary": {
            "type": "string",
            "maxLength": 100
          },
          "timezone": {
            "type": "string",
            "maxLength": 120
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "WorkingHourExcluding_id_": {
        "title": "WorkingHourExcluding_id_",
        "type": "object",
        "description": "(tsType: Omit<WorkingHour, 'id'>, schemaOptions: { exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "dayOfWeek": {
            "type": "number",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "end": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "calendarId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<WorkingHour, 'id'>"
      },
      "NewCalendar": {
        "title": "NewCalendar",
        "type": "object",
        "description": "(tsType: Omit<CalendarDTO, 'id'>, schemaOptions: { title: 'NewCalendar', exclude: [ 'id' ] })",
        "properties": {
          "source": {
            "type": "string"
          },
          "enableWorkingHours": {
            "type": "boolean"
          },
          "location": {
            "type": "string",
            "maxLength": 300
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "summary": {
            "type": "string",
            "maxLength": 100
          },
          "timezone": {
            "type": "string",
            "maxLength": 120
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          },
          "workingHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkingHourExcluding_id_"
            }
          },
          "subscription": {
            "type": "object"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<CalendarDTO, 'id'>"
      },
      "WorkingHour": {
        "title": "WorkingHour",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "dayOfWeek": {
            "type": "number",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "end": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "calendarId"
        ],
        "additionalProperties": false
      },
      "CalendarDTO": {
        "title": "CalendarDTO",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "enableWorkingHours": {
            "type": "boolean"
          },
          "location": {
            "type": "string",
            "maxLength": 300
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "summary": {
            "type": "string",
            "maxLength": 100
          },
          "timezone": {
            "type": "string",
            "maxLength": 120
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          },
          "workingHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkingHour"
            }
          },
          "subscription": {
            "type": "object"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false
      },
      "CalendarWithRelations": {
        "title": "CalendarWithRelations",
        "type": "object",
        "description": "(tsType: CalendarWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "enableWorkingHours": {
            "type": "boolean"
          },
          "location": {
            "type": "string",
            "maxLength": 300
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "summary": {
            "type": "string",
            "maxLength": 100
          },
          "timezone": {
            "type": "string",
            "maxLength": 120
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventWithRelations"
            }
          },
          "workingHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkingHourWithRelations"
            }
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionWithRelations"
            }
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false,
        "x-typescript-type": "CalendarWithRelations"
      },
      "CalendarPartial": {
        "title": "CalendarPartial",
        "type": "object",
        "description": "(tsType: Partial<Calendar>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "enableWorkingHours": {
            "type": "boolean"
          },
          "location": {
            "type": "string",
            "maxLength": 300
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "summary": {
            "type": "string",
            "maxLength": 100
          },
          "timezone": {
            "type": "string",
            "maxLength": 120
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Calendar>"
      },
      "Event": {
        "title": "Event",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "bgColor": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "fgColor": {
            "type": "string"
          },
          "iCalUid": {
            "type": "string"
          },
          "isFullDayEvent": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "link": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "maxLength": 300
          },
          "meetingLink": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "confirmed",
              "tentative",
              "cancelled",
              "completed"
            ]
          },
          "summary": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "parentEventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "calendarId"
        ],
        "additionalProperties": false
      },
      "AttachmentExcluding_id_": {
        "title": "AttachmentExcluding_id_",
        "type": "object",
        "description": "(tsType: Omit<Attachment, 'id'>, schemaOptions: { exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "iconLink": {
            "type": "string"
          },
          "mimeType": {
            "type": "string",
            "maxLength": 200
          },
          "title": {
            "type": "string",
            "maxLength": 400
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "fileUrl",
          "eventId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Attachment, 'id'>"
      },
      "AttendeeExcluding_id_": {
        "title": "AttendeeExcluding_id_",
        "type": "object",
        "description": "(tsType: Omit<Attendee, 'id'>, schemaOptions: { exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "isOptional": {
            "type": "boolean"
          },
          "isOrganizer": {
            "type": "boolean"
          },
          "messages": {
            "type": "string"
          },
          "responseStatus": {
            "type": "string",
            "enum": [
              "needsAction",
              "tentative",
              "accepted",
              "declined"
            ]
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "identifier",
          "eventId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Attendee, 'id'>"
      },
      "NewEvent": {
        "title": "NewEvent",
        "type": "object",
        "description": "(tsType: Omit<EventDTO, 'id'>, schemaOptions: { title: 'NewEvent', exclude: [ 'id' ] })",
        "properties": {
          "bgColor": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "fgColor": {
            "type": "string"
          },
          "iCalUid": {
            "type": "string"
          },
          "isFullDayEvent": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "link": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "maxLength": 300
          },
          "meetingLink": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "confirmed",
              "tentative",
              "cancelled",
              "completed"
            ]
          },
          "summary": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "parentEventId": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentExcluding_id_"
            }
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendeeExcluding_id_"
            }
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "calendarId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<EventDTO, 'id'>"
      },
      "EventAttendeeViewItemDTO": {
        "title": "EventAttendeeViewItemDTO",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "bgColor": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          },
          "fgColor": {
            "type": "string"
          },
          "iCalUid": {
            "type": "string"
          },
          "isFullDayEvent": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "link": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "maxLength": 300
          },
          "meetingLink": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "confirmed",
              "tentative",
              "cancelled",
              "completed"
            ]
          },
          "summary": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "attendeeId": {
            "type": "string"
          },
          "isOptional": {
            "type": "boolean"
          },
          "attendeeIdentifier": {
            "type": "string"
          },
          "isOrganizer": {
            "type": "boolean"
          },
          "messages": {
            "type": "string"
          },
          "eventId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FreeBusyRequest": {
        "title": "FreeBusyRequest",
        "type": "object",
        "description": "(tsType: FreeBusyDTO, schemaOptions: { title: 'FreeBusyRequest' })",
        "properties": {
          "timeMax": {
            "type": "string",
            "format": "date-time"
          },
          "timeMin": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventAttendeeViewItemDTO"
            }
          }
        },
        "required": [
          "timeMax",
          "timeMin"
        ],
        "additionalProperties": false,
        "x-typescript-type": "FreeBusyDTO"
      },
      "FreeBusyDTO": {
        "title": "FreeBusyDTO",
        "type": "object",
        "properties": {
          "timeMax": {
            "type": "string",
            "format": "date-time"
          },
          "timeMin": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventAttendeeViewItemDTO"
            }
          }
        },
        "required": [
          "timeMax",
          "timeMin"
        ],
        "additionalProperties": false
      },
      "EventPartial": {
        "title": "EventPartial",
        "type": "object",
        "description": "(tsType: Partial<Event>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "bgColor": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "fgColor": {
            "type": "string"
          },
          "iCalUid": {
            "type": "string"
          },
          "isFullDayEvent": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "link": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "maxLength": 300
          },
          "meetingLink": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "confirmed",
              "tentative",
              "cancelled",
              "completed"
            ]
          },
          "summary": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "parentEventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Event>"
      },
      "Settings": {
        "title": "Settings",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "ownerId": {
            "type": "string",
            "maxLength": 225
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "global",
              "user",
              "calendar",
              "event"
            ]
          },
          "settingName": {
            "type": "string",
            "maxLength": 225
          },
          "settingValue": {
            "type": "string",
            "maxLength": 1500
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "ownerId"
        ],
        "additionalProperties": false
      },
      "NewSettings": {
        "title": "NewSettings",
        "type": "object",
        "description": "(tsType: Omit<Settings, 'id'>, schemaOptions: { title: 'NewSettings', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "ownerId": {
            "type": "string",
            "maxLength": 225
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "global",
              "user",
              "calendar",
              "event"
            ]
          },
          "settingName": {
            "type": "string",
            "maxLength": 225
          },
          "settingValue": {
            "type": "string",
            "maxLength": 1500
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "ownerId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Settings, 'id'>"
      },
      "SettingsWithRelations": {
        "title": "SettingsWithRelations",
        "type": "object",
        "description": "(tsType: SettingsWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "ownerId": {
            "type": "string",
            "maxLength": 225
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "global",
              "user",
              "calendar",
              "event"
            ]
          },
          "settingName": {
            "type": "string",
            "maxLength": 225
          },
          "settingValue": {
            "type": "string",
            "maxLength": 1500
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "ownerId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "SettingsWithRelations"
      },
      "SettingsPartial": {
        "title": "SettingsPartial",
        "type": "object",
        "description": "(tsType: Partial<Settings>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "ownerId": {
            "type": "string",
            "maxLength": 225
          },
          "ownerType": {
            "type": "string",
            "enum": [
              "global",
              "user",
              "calendar",
              "event"
            ]
          },
          "settingName": {
            "type": "string",
            "maxLength": 225
          },
          "settingValue": {
            "type": "string",
            "maxLength": 1500
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Settings>"
      },
      "Subscription": {
        "title": "Subscription",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "accessRole": {
            "type": "string",
            "enum": [
              "freeBusyReader",
              "reader",
              "writer",
              "owner"
            ]
          },
          "bgColor": {
            "type": "string"
          },
          "fgColor": {
            "type": "string"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "identifier": {
            "type": "string"
          },
          "defaultReminders": {
            "type": "object"
          },
          "notificationSettings": {
            "type": "object"
          },
          "calendarId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "identifier",
          "calendarId"
        ],
        "additionalProperties": false
      },
      "NewSubscription": {
        "title": "NewSubscription",
        "type": "object",
        "description": "(tsType: Omit<Subscription, 'id'>, schemaOptions: { title: 'NewSubscription', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "accessRole": {
            "type": "string",
            "enum": [
              "freeBusyReader",
              "reader",
              "writer",
              "owner"
            ]
          },
          "bgColor": {
            "type": "string"
          },
          "fgColor": {
            "type": "string"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "identifier": {
            "type": "string"
          },
          "defaultReminders": {
            "type": "object"
          },
          "notificationSettings": {
            "type": "object"
          },
          "calendarId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "identifier",
          "calendarId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Subscription, 'id'>"
      },
      "SubscriptionWithRelations": {
        "title": "SubscriptionWithRelations",
        "type": "object",
        "description": "(tsType: SubscriptionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "accessRole": {
            "type": "string",
            "enum": [
              "freeBusyReader",
              "reader",
              "writer",
              "owner"
            ]
          },
          "bgColor": {
            "type": "string"
          },
          "fgColor": {
            "type": "string"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "identifier": {
            "type": "string"
          },
          "defaultReminders": {
            "type": "object"
          },
          "notificationSettings": {
            "type": "object"
          },
          "calendarId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          },
          "calendar": {
            "$ref": "#/components/schemas/CalendarWithRelations"
          }
        },
        "required": [
          "identifier",
          "calendarId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "SubscriptionWithRelations"
      },
      "SubscriptionPartial": {
        "title": "SubscriptionPartial",
        "type": "object",
        "description": "(tsType: Partial<Subscription>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "accessRole": {
            "type": "string",
            "enum": [
              "freeBusyReader",
              "reader",
              "writer",
              "owner"
            ]
          },
          "bgColor": {
            "type": "string"
          },
          "fgColor": {
            "type": "string"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "identifier": {
            "type": "string"
          },
          "defaultReminders": {
            "type": "object"
          },
          "notificationSettings": {
            "type": "object"
          },
          "calendarId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Subscription>"
      },
      "Theme": {
        "title": "Theme",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "calBg": {
            "type": "string",
            "maxLength": 200
          },
          "calFg": {
            "type": "string",
            "maxLength": 200
          },
          "eventBg": {
            "type": "string",
            "maxLength": 200
          },
          "eventFg": {
            "type": "string",
            "maxLength": 200
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false
      },
      "NewTheme": {
        "title": "NewTheme",
        "type": "object",
        "description": "(tsType: Omit<Theme, 'id'>, schemaOptions: { title: 'NewTheme', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "calBg": {
            "type": "string",
            "maxLength": 200
          },
          "calFg": {
            "type": "string",
            "maxLength": 200
          },
          "eventBg": {
            "type": "string",
            "maxLength": 200
          },
          "eventFg": {
            "type": "string",
            "maxLength": 200
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<Theme, 'id'>"
      },
      "ThemeWithRelations": {
        "title": "ThemeWithRelations",
        "type": "object",
        "description": "(tsType: ThemeWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "calBg": {
            "type": "string",
            "maxLength": 200
          },
          "calFg": {
            "type": "string",
            "maxLength": 200
          },
          "eventBg": {
            "type": "string",
            "maxLength": 200
          },
          "eventFg": {
            "type": "string",
            "maxLength": 200
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "ThemeWithRelations"
      },
      "ThemePartial": {
        "title": "ThemePartial",
        "type": "object",
        "description": "(tsType: Partial<Theme>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "calBg": {
            "type": "string",
            "maxLength": 200
          },
          "calFg": {
            "type": "string",
            "maxLength": 200
          },
          "eventBg": {
            "type": "string",
            "maxLength": 200
          },
          "eventFg": {
            "type": "string",
            "maxLength": 200
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Theme>"
      },
      "NewWorkingHour": {
        "title": "NewWorkingHour",
        "type": "object",
        "description": "(tsType: Omit<WorkingHour, 'id'>, schemaOptions: { title: 'NewWorkingHour', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "dayOfWeek": {
            "type": "number",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "end": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "calendarId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<WorkingHour, 'id'>"
      },
      "WorkingHourWithRelations": {
        "title": "WorkingHourWithRelations",
        "type": "object",
        "description": "(tsType: WorkingHourWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "dayOfWeek": {
            "type": "number",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "end": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          },
          "calendar": {
            "$ref": "#/components/schemas/CalendarWithRelations"
          }
        },
        "required": [
          "calendarId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "WorkingHourWithRelations"
      },
      "WorkingHourPartial": {
        "title": "WorkingHourPartial",
        "type": "object",
        "description": "(tsType: Partial<WorkingHour>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "dayOfWeek": {
            "type": "number",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "end": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<WorkingHour>"
      },
      "Date": {},
      "NewEventInCalendar": {
        "title": "NewEventInCalendar",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Event, 'id'>, 'calendarId'>, schemaOptions: { title: 'NewEventInCalendar', exclude: [ 'id' ], optional: [ 'calendarId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "bgColor": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "fgColor": {
            "type": "string"
          },
          "iCalUid": {
            "type": "string"
          },
          "isFullDayEvent": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "link": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "maxLength": 300
          },
          "meetingLink": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "confirmed",
              "tentative",
              "cancelled",
              "completed"
            ]
          },
          "summary": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "parentEventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Event, 'id'>, 'calendarId'>"
      },
      "NewSubscriptionInCalendar": {
        "title": "NewSubscriptionInCalendar",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Subscription, 'id'>, 'calendarId'>, schemaOptions: { title: 'NewSubscriptionInCalendar', exclude: [ 'id' ], optional: [ 'calendarId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "accessRole": {
            "type": "string",
            "enum": [
              "freeBusyReader",
              "reader",
              "writer",
              "owner"
            ]
          },
          "bgColor": {
            "type": "string"
          },
          "fgColor": {
            "type": "string"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "identifier": {
            "type": "string"
          },
          "defaultReminders": {
            "type": "object"
          },
          "notificationSettings": {
            "type": "object"
          },
          "calendarId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Subscription, 'id'>, 'calendarId'>"
      },
      "NewWorkingHourInCalendar": {
        "title": "NewWorkingHourInCalendar",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<WorkingHour, 'id'>, 'calendarId'>, schemaOptions: { title: 'NewWorkingHourInCalendar', exclude: [ 'id' ], optional: [ 'calendarId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "dayOfWeek": {
            "type": "number",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ]
          },
          "end": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "calendarId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<WorkingHour, 'id'>, 'calendarId'>"
      },
      "NewAttachmentInEvent": {
        "title": "NewAttachmentInEvent",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Attachment, 'id'>, 'eventId'>, schemaOptions: { title: 'NewAttachmentInEvent', exclude: [ 'id' ], optional: [ 'eventId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "iconLink": {
            "type": "string"
          },
          "mimeType": {
            "type": "string",
            "maxLength": 200
          },
          "title": {
            "type": "string",
            "maxLength": 400
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "fileUrl"
        ],
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Attachment, 'id'>, 'eventId'>"
      },
      "NewAttendeeInEvent": {
        "title": "NewAttendeeInEvent",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Attendee, 'id'>, 'eventId'>, schemaOptions: { title: 'NewAttendeeInEvent', exclude: [ 'id' ], optional: [ 'eventId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "maxLength": 200
          },
          "isOptional": {
            "type": "boolean"
          },
          "isOrganizer": {
            "type": "boolean"
          },
          "messages": {
            "type": "string"
          },
          "responseStatus": {
            "type": "string",
            "enum": [
              "needsAction",
              "tentative",
              "accepted",
              "declined"
            ]
          },
          "eventId": {
            "type": "string"
          },
          "extId": {
            "type": "string"
          },
          "extMetadata": {
            "type": "object"
          }
        },
        "required": [
          "identifier"
        ],
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Attendee, 'id'>, 'eventId'>"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "attachments.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "attachments.ScopeFilter"
      },
      "attachments.IncludeFilter.Items": {
        "title": "attachments.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/attachments.ScopeFilter"
          }
        }
      },
      "attachments.Filter": {
        "type": "object",
        "title": "attachments.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "fileUrl": {
                    "type": "boolean"
                  },
                  "iconLink": {
                    "type": "boolean"
                  },
                  "mimeType": {
                    "type": "boolean"
                  },
                  "title": {
                    "type": "boolean"
                  },
                  "eventId": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "fileUrl",
                    "iconLink",
                    "mimeType",
                    "title",
                    "eventId",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "attachments.Fields"
          },
          "include": {
            "title": "attachments.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/attachments.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Attachment>"
      },
      "attachments.Filter1": {
        "type": "object",
        "title": "attachments.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "attachments.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "fileUrl": {
                    "type": "boolean"
                  },
                  "iconLink": {
                    "type": "boolean"
                  },
                  "mimeType": {
                    "type": "boolean"
                  },
                  "title": {
                    "type": "boolean"
                  },
                  "eventId": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "fileUrl",
                    "iconLink",
                    "mimeType",
                    "title",
                    "eventId",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "attachments.Fields"
          },
          "include": {
            "title": "attachments.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/attachments.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Attachment>"
      },
      "attendees.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "attendees.ScopeFilter"
      },
      "attendees.IncludeFilter.Items": {
        "title": "attendees.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/attendees.ScopeFilter"
          }
        }
      },
      "attendees.Filter": {
        "type": "object",
        "title": "attendees.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "identifier": {
                    "type": "boolean"
                  },
                  "isOptional": {
                    "type": "boolean"
                  },
                  "isOrganizer": {
                    "type": "boolean"
                  },
                  "messages": {
                    "type": "boolean"
                  },
                  "responseStatus": {
                    "type": "boolean"
                  },
                  "eventId": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "identifier",
                    "isOptional",
                    "isOrganizer",
                    "messages",
                    "responseStatus",
                    "eventId",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "attendees.Fields"
          },
          "include": {
            "title": "attendees.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/attendees.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Attendee>"
      },
      "attendees.Filter1": {
        "type": "object",
        "title": "attendees.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "attendees.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "identifier": {
                    "type": "boolean"
                  },
                  "isOptional": {
                    "type": "boolean"
                  },
                  "isOrganizer": {
                    "type": "boolean"
                  },
                  "messages": {
                    "type": "boolean"
                  },
                  "responseStatus": {
                    "type": "boolean"
                  },
                  "eventId": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "identifier",
                    "isOptional",
                    "isOrganizer",
                    "messages",
                    "responseStatus",
                    "eventId",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "attendees.Fields"
          },
          "include": {
            "title": "attendees.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/attendees.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Attendee>"
      },
      "subscriptions.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "subscriptions.ScopeFilter"
      },
      "subscriptions.IncludeFilter.Items": {
        "title": "subscriptions.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/subscriptions.ScopeFilter"
          }
        }
      },
      "subscriptions.Filter": {
        "type": "object",
        "title": "subscriptions.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "subscriptions.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "accessRole": {
                    "type": "boolean"
                  },
                  "bgColor": {
                    "type": "boolean"
                  },
                  "fgColor": {
                    "type": "boolean"
                  },
                  "isHidden": {
                    "type": "boolean"
                  },
                  "isPrimary": {
                    "type": "boolean"
                  },
                  "identifier": {
                    "type": "boolean"
                  },
                  "defaultReminders": {
                    "type": "boolean"
                  },
                  "notificationSettings": {
                    "type": "boolean"
                  },
                  "calendarId": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "accessRole",
                    "bgColor",
                    "fgColor",
                    "isHidden",
                    "isPrimary",
                    "identifier",
                    "defaultReminders",
                    "notificationSettings",
                    "calendarId",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "subscriptions.Fields"
          },
          "include": {
            "title": "subscriptions.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Subscription>"
      },
      "calendars.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "calendars.ScopeFilter"
      },
      "calendars.IncludeFilter.Items": {
        "title": "calendars.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/calendars.ScopeFilter"
          }
        }
      },
      "calendars.Filter": {
        "type": "object",
        "title": "calendars.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "source": {
                    "type": "boolean"
                  },
                  "enableWorkingHours": {
                    "type": "boolean"
                  },
                  "location": {
                    "type": "boolean"
                  },
                  "identifier": {
                    "type": "boolean"
                  },
                  "summary": {
                    "type": "boolean"
                  },
                  "timezone": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "source",
                    "enableWorkingHours",
                    "location",
                    "identifier",
                    "summary",
                    "timezone",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "calendars.Fields"
          },
          "include": {
            "title": "calendars.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/calendars.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Calendar>"
      },
      "calendars.Filter1": {
        "type": "object",
        "title": "calendars.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "calendars.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "source": {
                    "type": "boolean"
                  },
                  "enableWorkingHours": {
                    "type": "boolean"
                  },
                  "location": {
                    "type": "boolean"
                  },
                  "identifier": {
                    "type": "boolean"
                  },
                  "summary": {
                    "type": "boolean"
                  },
                  "timezone": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "source",
                    "enableWorkingHours",
                    "location",
                    "identifier",
                    "summary",
                    "timezone",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "calendars.Fields"
          },
          "include": {
            "title": "calendars.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/calendars.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Calendar>"
      },
      "events.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "events.ScopeFilter"
      },
      "events.IncludeFilter.Items": {
        "title": "events.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/events.ScopeFilter"
          }
        }
      },
      "events.Filter": {
        "type": "object",
        "title": "events.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "bgColor": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "endDateTime": {
                    "type": "boolean"
                  },
                  "fgColor": {
                    "type": "boolean"
                  },
                  "iCalUid": {
                    "type": "boolean"
                  },
                  "isFullDayEvent": {
                    "type": "boolean"
                  },
                  "isLocked": {
                    "type": "boolean"
                  },
                  "link": {
                    "type": "boolean"
                  },
                  "location": {
                    "type": "boolean"
                  },
                  "meetingLink": {
                    "type": "boolean"
                  },
                  "identifier": {
                    "type": "boolean"
                  },
                  "startDateTime": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "summary": {
                    "type": "boolean"
                  },
                  "timezone": {
                    "type": "boolean"
                  },
                  "calendarId": {
                    "type": "boolean"
                  },
                  "parentEventId": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "bgColor",
                    "description",
                    "endDateTime",
                    "fgColor",
                    "iCalUid",
                    "isFullDayEvent",
                    "isLocked",
                    "link",
                    "location",
                    "meetingLink",
                    "identifier",
                    "startDateTime",
                    "status",
                    "summary",
                    "timezone",
                    "calendarId",
                    "parentEventId",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "events.Fields"
          },
          "include": {
            "title": "events.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/events.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Event>"
      },
      "events_attendees_view.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "events_attendees_view.ScopeFilter"
      },
      "events_attendees_view.IncludeFilter.Items": {
        "title": "events_attendees_view.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/events_attendees_view.ScopeFilter"
          }
        }
      },
      "events_attendees_view.Filter": {
        "type": "object",
        "title": "events_attendees_view.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "events_attendees_view.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "bgColor": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "endDateTime": {
                    "type": "boolean"
                  },
                  "fgColor": {
                    "type": "boolean"
                  },
                  "iCalUid": {
                    "type": "boolean"
                  },
                  "isFullDayEvent": {
                    "type": "boolean"
                  },
                  "isLocked": {
                    "type": "boolean"
                  },
                  "link": {
                    "type": "boolean"
                  },
                  "location": {
                    "type": "boolean"
                  },
                  "meetingLink": {
                    "type": "boolean"
                  },
                  "identifier": {
                    "type": "boolean"
                  },
                  "startDateTime": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "summary": {
                    "type": "boolean"
                  },
                  "timezone": {
                    "type": "boolean"
                  },
                  "calendarId": {
                    "type": "boolean"
                  },
                  "parentEventId": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  },
                  "attendeeId": {
                    "type": "boolean"
                  },
                  "isOptional": {
                    "type": "boolean"
                  },
                  "attendeeIdentifier": {
                    "type": "boolean"
                  },
                  "isOrganizer": {
                    "type": "boolean"
                  },
                  "messages": {
                    "type": "boolean"
                  },
                  "responseStatus": {
                    "type": "boolean"
                  },
                  "eventId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "bgColor",
                    "description",
                    "endDateTime",
                    "fgColor",
                    "iCalUid",
                    "isFullDayEvent",
                    "isLocked",
                    "link",
                    "location",
                    "meetingLink",
                    "identifier",
                    "startDateTime",
                    "status",
                    "summary",
                    "timezone",
                    "calendarId",
                    "parentEventId",
                    "extId",
                    "extMetadata",
                    "attendeeId",
                    "isOptional",
                    "attendeeIdentifier",
                    "isOrganizer",
                    "messages",
                    "responseStatus",
                    "eventId"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "events_attendees_view.Fields"
          },
          "include": {
            "title": "events_attendees_view.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/events_attendees_view.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<EventAttendeeView>"
      },
      "settings.Filter": {
        "type": "object",
        "title": "settings.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "ownerId": {
                    "type": "boolean"
                  },
                  "ownerType": {
                    "type": "boolean"
                  },
                  "settingName": {
                    "type": "boolean"
                  },
                  "settingValue": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "ownerId",
                    "ownerType",
                    "settingName",
                    "settingValue",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "settings.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Settings>"
      },
      "settings.Filter1": {
        "type": "object",
        "title": "settings.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "settings.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "ownerId": {
                    "type": "boolean"
                  },
                  "ownerType": {
                    "type": "boolean"
                  },
                  "settingName": {
                    "type": "boolean"
                  },
                  "settingValue": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "ownerId",
                    "ownerType",
                    "settingName",
                    "settingValue",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "settings.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Settings>"
      },
      "subscriptions.Filter1": {
        "type": "object",
        "title": "subscriptions.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "accessRole": {
                    "type": "boolean"
                  },
                  "bgColor": {
                    "type": "boolean"
                  },
                  "fgColor": {
                    "type": "boolean"
                  },
                  "isHidden": {
                    "type": "boolean"
                  },
                  "isPrimary": {
                    "type": "boolean"
                  },
                  "identifier": {
                    "type": "boolean"
                  },
                  "defaultReminders": {
                    "type": "boolean"
                  },
                  "notificationSettings": {
                    "type": "boolean"
                  },
                  "calendarId": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "accessRole",
                    "bgColor",
                    "fgColor",
                    "isHidden",
                    "isPrimary",
                    "identifier",
                    "defaultReminders",
                    "notificationSettings",
                    "calendarId",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "subscriptions.Fields"
          },
          "include": {
            "title": "subscriptions.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/subscriptions.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Subscription>"
      },
      "themes.Filter": {
        "type": "object",
        "title": "themes.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "calBg": {
                    "type": "boolean"
                  },
                  "calFg": {
                    "type": "boolean"
                  },
                  "eventBg": {
                    "type": "boolean"
                  },
                  "eventFg": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "calBg",
                    "calFg",
                    "eventBg",
                    "eventFg",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "themes.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Theme>"
      },
      "themes.Filter1": {
        "type": "object",
        "title": "themes.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "themes.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "calBg": {
                    "type": "boolean"
                  },
                  "calFg": {
                    "type": "boolean"
                  },
                  "eventBg": {
                    "type": "boolean"
                  },
                  "eventFg": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "calBg",
                    "calFg",
                    "eventBg",
                    "eventFg",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "themes.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Theme>"
      },
      "working_hours.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "working_hours.ScopeFilter"
      },
      "working_hours.IncludeFilter.Items": {
        "title": "working_hours.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/working_hours.ScopeFilter"
          }
        }
      },
      "working_hours.Filter": {
        "type": "object",
        "title": "working_hours.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "dayOfWeek": {
                    "type": "boolean"
                  },
                  "end": {
                    "type": "boolean"
                  },
                  "start": {
                    "type": "boolean"
                  },
                  "calendarId": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "dayOfWeek",
                    "end",
                    "start",
                    "calendarId",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "working_hours.Fields"
          },
          "include": {
            "title": "working_hours.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/working_hours.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<WorkingHour>"
      },
      "working_hours.Filter1": {
        "type": "object",
        "title": "working_hours.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "working_hours.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "dayOfWeek": {
                    "type": "boolean"
                  },
                  "end": {
                    "type": "boolean"
                  },
                  "start": {
                    "type": "boolean"
                  },
                  "calendarId": {
                    "type": "boolean"
                  },
                  "extId": {
                    "type": "boolean"
                  },
                  "extMetadata": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "dayOfWeek",
                    "end",
                    "start",
                    "calendarId",
                    "extId",
                    "extMetadata"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "working_hours.Fields"
          },
          "include": {
            "title": "working_hours.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/working_hours.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<WorkingHour>"
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ]
}
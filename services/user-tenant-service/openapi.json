{
  "openapi": "3.0.0",
  "info": {
    "title": "@sourceloop/user-tenant-service",
    "version": "0.6.14",
    "description": "Sourceloop User Tenant Service.",
    "contact": {
      "name": "Sourcefuse"
    }
  },
  "paths": {
    "/check-signup/{email}": {
      "get": {
        "x-controller-name": "UserSignupController",
        "x-operation-name": "checkUserSignup",
        "tags": [
          "UserSignupController"
        ],
        "responses": {
          "200": {
            "description": "Success Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSignupCheckDto"
                }
              }
            }
          },
          "400": {
            "description": "The syntax of the request entity is incorrect."
          },
          "401": {
            "description": "Invalid Credentials."
          },
          "404": {
            "description": "The entity requested does not exist."
          },
          "422": {
            "description": "The syntax of the request entity is incorrect"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewAnyUser   |\n| ViewTenantUser   |\n| 11   |\n| 12   |\n",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "UserSignupController.checkUserSignup"
      }
    },
    "/groups/count": {
      "get": {
        "x-controller-name": "GroupController",
        "x-operation-name": "count",
        "tags": [
          "GroupController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Group model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewUserGroupList   |\n| 2   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "groups.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Group>"
                }
              }
            }
          }
        ],
        "operationId": "GroupController.count"
      }
    },
    "/groups/{id}/user-groups/count": {
      "get": {
        "x-controller-name": "UserGroupController",
        "x-operation-name": "count",
        "tags": [
          "UserGroupController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User Group model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewUserGroupList   |\n| 2   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "user_groups.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<UserGroup>"
                }
              }
            }
          }
        ],
        "operationId": "UserGroupController.count"
      }
    },
    "/groups/{id}/user-groups/{userGroupId}": {
      "patch": {
        "x-controller-name": "UserGroupController",
        "x-operation-name": "patch",
        "tags": [
          "UserGroupController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Group.UserGroup PATCH success count"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateMemberInUserGroup   |\n| 33   |\n",
        "parameters": [
          {
            "name": "userGroupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupPartial"
              }
            }
          },
          "x-parameter-index": 2
        },
        "operationId": "UserGroupController.patch"
      },
      "delete": {
        "x-controller-name": "UserGroupController",
        "x-operation-name": "delete",
        "tags": [
          "UserGroupController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Group.UserGroup DELETE success count"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| RemoveMemberFromUserGroup   |\n| LeaveUserGroup   |\n| 34   |\n| 35   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "userGroupId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "UserGroupController.delete"
      }
    },
    "/groups/{id}/user-groups": {
      "post": {
        "x-controller-name": "UserGroupController",
        "x-operation-name": "create",
        "tags": [
          "UserGroupController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Group model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| AddMemberToUserGroup   |\n| 32   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserGroupInGroup"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "UserGroupController.create"
      },
      "get": {
        "x-controller-name": "UserGroupController",
        "x-operation-name": "find",
        "tags": [
          "UserGroupController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Group has many UserGroup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewUserGroupList   |\n| 2   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "UserGroupController.find"
      }
    },
    "/groups/{id}": {
      "patch": {
        "x-controller-name": "GroupController",
        "x-operation-name": "updateById",
        "tags": [
          "GroupController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Group PATCH success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateUserGroup   |\n| 3   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "GroupController.updateById"
      },
      "get": {
        "x-controller-name": "GroupController",
        "x-operation-name": "findById",
        "tags": [
          "GroupController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Group model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewUserGroupList   |\n| ViewUserGroupList   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/groups.Filter"
                }
              }
            }
          }
        ],
        "operationId": "GroupController.findById"
      },
      "delete": {
        "x-controller-name": "GroupController",
        "x-operation-name": "deleteById",
        "tags": [
          "GroupController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Group DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| DeleteUserGroup   |\n| 4   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "GroupController.deleteById"
      }
    },
    "/groups": {
      "post": {
        "x-controller-name": "GroupController",
        "x-operation-name": "create",
        "tags": [
          "GroupController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Group model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateUserGroup   |\n| 1   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTeam"
              }
            }
          }
        },
        "operationId": "GroupController.create"
      },
      "get": {
        "x-controller-name": "GroupController",
        "x-operation-name": "find",
        "tags": [
          "GroupController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Group model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewUserGroupList   |\n| 2   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/groups.Filter"
                }
              }
            }
          }
        ],
        "operationId": "GroupController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "description": "",
        "operationId": "PingController.ping"
      }
    },
    "/roles/count": {
      "get": {
        "x-controller-name": "RoleController",
        "x-operation-name": "count",
        "tags": [
          "RoleController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewRoles   |\n| 6   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "roles.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Role>"
                }
              }
            }
          }
        ],
        "operationId": "RoleController.count"
      }
    },
    "/roles/{id}/user-tenants/count": {
      "get": {
        "x-controller-name": "RoleUserTenantController",
        "x-operation-name": "count",
        "tags": [
          "RoleUserTenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User tenant count for specified role id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewRoles   |\n| 6   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "user_tenants.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<UserTenant>"
                }
              }
            }
          }
        ],
        "operationId": "RoleUserTenantController.count"
      }
    },
    "/roles/{id}/user-tenants": {
      "post": {
        "x-controller-name": "RoleUserTenantController",
        "x-operation-name": "create",
        "tags": [
          "RoleUserTenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTenant"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| NotAllowed   |\n| 7   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserTenantInRole"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "RoleUserTenantController.create"
      },
      "patch": {
        "x-controller-name": "RoleUserTenantController",
        "x-operation-name": "patch",
        "tags": [
          "RoleUserTenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role.UserTenant PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| NotAllowed   |\n| 7   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "user_tenants.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<UserTenant>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTenantPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "RoleUserTenantController.patch"
      },
      "get": {
        "x-controller-name": "RoleUserTenantController",
        "x-operation-name": "find",
        "tags": [
          "RoleUserTenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Role has many UserTenant",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserTenant"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewRoles   |\n| 6   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "RoleUserTenantController.find"
      },
      "delete": {
        "x-controller-name": "RoleUserTenantController",
        "x-operation-name": "delete",
        "tags": [
          "RoleUserTenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role.UserTenant DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| NotAllowed   |\n| 7   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "user_tenants.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<UserTenant>"
                }
              }
            }
          }
        ],
        "operationId": "RoleUserTenantController.delete"
      }
    },
    "/roles/{id}": {
      "put": {
        "x-controller-name": "RoleController",
        "x-operation-name": "replaceById",
        "tags": [
          "RoleController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Role PUT success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateRoles   |\n| 9   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "RoleController.replaceById"
      },
      "patch": {
        "x-controller-name": "RoleController",
        "x-operation-name": "updateById",
        "tags": [
          "RoleController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Role PATCH success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateRoles   |\n| UpdateRoles   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "RoleController.updateById"
      },
      "get": {
        "x-controller-name": "RoleController",
        "x-operation-name": "findById",
        "tags": [
          "RoleController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewRoles   |\n| 6   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/roles.Filter"
                }
              }
            }
          }
        ],
        "operationId": "RoleController.findById"
      },
      "delete": {
        "x-controller-name": "RoleController",
        "x-operation-name": "deleteById",
        "tags": [
          "RoleController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Role DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| DeleteRoles   |\n| 10   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "RoleController.deleteById"
      }
    },
    "/roles": {
      "post": {
        "x-controller-name": "RoleController",
        "x-operation-name": "create",
        "tags": [
          "RoleController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateRoles   |\n| 8   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRole"
              }
            }
          }
        },
        "operationId": "RoleController.create"
      },
      "patch": {
        "x-controller-name": "RoleController",
        "x-operation-name": "updateAll",
        "tags": [
          "RoleController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateRoles   |\n| 9   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "roles.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Role>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePartial"
              }
            }
          }
        },
        "operationId": "RoleController.updateAll"
      },
      "get": {
        "x-controller-name": "RoleController",
        "x-operation-name": "find",
        "tags": [
          "RoleController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Role model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleWithRelations"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewRoles   |\n| 6   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/roles.Filter"
                }
              }
            }
          }
        ],
        "operationId": "RoleController.find"
      }
    },
    "/tenants/count": {
      "get": {
        "x-controller-name": "TenantController",
        "x-operation-name": "count",
        "tags": [
          "TenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewTenant   |\n| 27   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "tenants.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Tenant>"
                }
              }
            }
          }
        ],
        "operationId": "TenantController.count"
      }
    },
    "/tenants/{id}/config": {
      "get": {
        "x-controller-name": "TenantController",
        "x-operation-name": "getTenantConfig",
        "tags": [
          "TenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant config instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantConfig"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewTenant   |\n| 27   |\n| 29   |\n| ViewOwnTenant   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TenantController.getTenantConfig"
      }
    },
    "/tenants/{id}/users/count": {
      "get": {
        "x-controller-name": "TenantUserController",
        "x-operation-name": "count",
        "tags": [
          "TenantUserController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewAnyUser   |\n| ViewTenantUser   |\n| ViewTenantUserRestricted   |\n| 11   |\n| 12   |\n| 13   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "TenantUserController.count"
      }
    },
    "/tenants/{id}/users/view-all": {
      "get": {
        "x-controller-name": "TenantUserController",
        "x-operation-name": "findAllUsers",
        "tags": [
          "TenantUserController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Tenant has many Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The syntax of the request entity is incorrect."
          },
          "401": {
            "description": "Invalid Credentials."
          },
          "404": {
            "description": "The entity requested does not exist."
          },
          "422": {
            "description": "The syntax of the request entity is incorrect"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewAllUser   |\n| 14   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v_users.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TenantUserController.findAllUsers"
      }
    },
    "/tenants/{id}/users/{userId}": {
      "patch": {
        "x-controller-name": "TenantUserController",
        "x-operation-name": "updateById",
        "tags": [
          "TenantUserController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "User PATCH success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateAnyUser   |\n| UpdateOwnUser   |\n| UpdateTenantUser   |\n| UpdateTenantUserRestricted   |\n| 19   |\n| 20   |\n| 21   |\n| 22   |\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserViewPartial"
              }
            }
          },
          "x-parameter-index": 3
        },
        "operationId": "TenantUserController.updateById"
      },
      "delete": {
        "x-controller-name": "TenantUserController",
        "x-operation-name": "deleteById",
        "tags": [
          "TenantUserController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "User DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| DeleteAnyUser   |\n| DeleteTenantUser   |\n| DeleteTenantUserRestricted   |\n| 23   |\n| 24   |\n| 25   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TenantUserController.deleteById"
      }
    },
    "/tenants/{id}/users/{userid}": {
      "get": {
        "x-controller-name": "TenantUserController",
        "x-operation-name": "findById",
        "tags": [
          "TenantUserController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserViewWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewAnyUser   |\n| ViewTenantUser   |\n| ViewTenantUserRestricted   |\n| ViewOwnUser   |\n| 11   |\n| 12   |\n| 13   |\n| 15   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "userid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v_users.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TenantUserController.findById"
      }
    },
    "/tenants/{id}/users": {
      "post": {
        "x-controller-name": "TenantUserController",
        "x-operation-name": "create",
        "tags": [
          "TenantUserController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "The syntax of the request entity is incorrect."
          },
          "401": {
            "description": "Invalid Credentials."
          },
          "404": {
            "description": "The entity requested does not exist."
          },
          "422": {
            "description": "The syntax of the request entity is incorrect"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateAnyUser   |\n| CreateTenantUser   |\n| CreateTenantUserRestricted   |\n| 16   |\n| 17   |\n| 18   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TenantUserController.create"
      },
      "get": {
        "x-controller-name": "TenantUserController",
        "x-operation-name": "find",
        "tags": [
          "TenantUserController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Tenant has many Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The syntax of the request entity is incorrect."
          },
          "401": {
            "description": "Invalid Credentials."
          },
          "404": {
            "description": "The entity requested does not exist."
          },
          "422": {
            "description": "The syntax of the request entity is incorrect"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewAnyUser   |\n| ViewTenantUser   |\n| ViewTenantUserRestricted   |\n| 11   |\n| 12   |\n| 13   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v_users.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TenantUserController.find"
      }
    },
    "/tenants/{id}": {
      "patch": {
        "x-controller-name": "TenantController",
        "x-operation-name": "updateById",
        "tags": [
          "TenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Tenant PATCH success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateTenant   |\n| 28   |\n| 30   |\n| UpdateOwnTenant   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TenantController.updateById"
      },
      "get": {
        "x-controller-name": "TenantController",
        "x-operation-name": "findById",
        "tags": [
          "TenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewTenant   |\n| 27   |\n| 29   |\n| ViewOwnTenant   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tenants.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TenantController.findById"
      },
      "delete": {
        "x-controller-name": "TenantController",
        "x-operation-name": "deleteById",
        "tags": [
          "TenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Tenant DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| DeleteTenant   |\n| DeleteTenantUser   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TenantController.deleteById"
      }
    },
    "/tenants": {
      "post": {
        "x-controller-name": "TenantController",
        "x-operation-name": "create",
        "tags": [
          "TenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateTenant   |\n| 26   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTenant"
              }
            }
          }
        },
        "operationId": "TenantController.create"
      },
      "patch": {
        "x-controller-name": "TenantController",
        "x-operation-name": "updateAll",
        "tags": [
          "TenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateTenant   |\n| 28   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "tenants.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Tenant>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantPartial"
              }
            }
          }
        },
        "operationId": "TenantController.updateAll"
      },
      "get": {
        "x-controller-name": "TenantController",
        "x-operation-name": "find",
        "tags": [
          "TenantController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Tenant model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantWithRelations"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewTenant   |\n| 27   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tenants.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "TenantController.find"
      }
    },
    "/user-groups/count": {
      "get": {
        "x-controller-name": "UserGroupsController",
        "x-operation-name": "getCount",
        "tags": [
          "UserGroupsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Count of UserGroup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewUserGroupList   |\n| 2   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "UserGroupsController.getCount"
      }
    },
    "/user-groups": {
      "get": {
        "x-controller-name": "UserGroupsController",
        "x-operation-name": "find",
        "tags": [
          "UserGroupsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of UserGroup",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewUserGroupList   |\n| 2   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "UserGroupsController.find"
      }
    },
    "/user-tenant-prefs": {
      "post": {
        "x-controller-name": "UserTenantPrefsController",
        "x-operation-name": "create",
        "tags": [
          "UserTenantPrefsController"
        ],
        "responses": {
          "200": {
            "description": "UserTenantPrefs model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTenantPrefs"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateUserTenantPreference   |\n| 36   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserTenantPrefs"
              }
            }
          }
        },
        "operationId": "UserTenantPrefsController.create"
      },
      "get": {
        "x-controller-name": "UserTenantPrefsController",
        "x-operation-name": "find",
        "tags": [
          "UserTenantPrefsController"
        ],
        "responses": {
          "200": {
            "description": "Array of UserTenantPrefs model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserTenantPrefsWithRelations"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewUserTenantPreference   |\n| 37   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_tenant_prefs.Filter"
                }
              }
            }
          }
        ],
        "operationId": "UserTenantPrefsController.find"
      }
    },
    "/user-tenants/{id}": {
      "get": {
        "x-controller-name": "UserTenantController",
        "x-operation-name": "findById",
        "tags": [
          "UserTenantController"
        ],
        "responses": {
          "200": {
            "description": "UserView model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserViewWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewAnyUser   |\n| ViewOwnUser   |\n| ViewTenantUser   |\n| ViewTenantUserRestricted   |\n| 11   |\n| 15   |\n| 12   |\n| 13   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v_users.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "UserTenantController.findById"
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "components": {
    "schemas": {
      "Group": {
        "title": "Group",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "photoUrl": {
            "type": "string"
          },
          "groupType": {
            "type": "string",
            "enum": [
              "Tenant"
            ]
          }
        },
        "additionalProperties": false
      },
      "NewTeam": {
        "title": "NewTeam",
        "type": "object",
        "description": "(tsType: Omit<Group, 'id'>, schemaOptions: { title: 'NewTeam', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "photoUrl": {
            "type": "string"
          },
          "groupType": {
            "type": "string",
            "enum": [
              "Tenant"
            ]
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<Group, 'id'>"
      },
      "GroupPartial": {
        "title": "GroupPartial",
        "type": "object",
        "description": "(tsType: Partial<Group>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "photoUrl": {
            "type": "string"
          },
          "groupType": {
            "type": "string",
            "enum": [
              "Tenant"
            ]
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Group>"
      },
      "UserTenant": {
        "title": "UserTenant",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "maximum": 12,
            "minimum": 0
          },
          "userId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "tenantId",
          "roleId"
        ],
        "additionalProperties": false
      },
      "NewUserTenantInRole": {
        "title": "NewUserTenantInRole",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<UserTenant, 'id'>, 'roleId'>, schemaOptions: { title: 'NewUserTenantInRole', exclude: [ 'id' ], optional: [ 'roleId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "locale": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "maximum": 12,
            "minimum": 0
          },
          "userId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "tenantId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<UserTenant, 'id'>, 'roleId'>"
      },
      "UserTenantPartial": {
        "title": "UserTenantPartial",
        "type": "object",
        "description": "(tsType: Partial<UserTenant>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "maximum": 12,
            "minimum": 0
          },
          "userId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<UserTenant>"
      },
      "Role": {
        "title": "Role",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleType": {
            "type": "number",
            "maximum": 15,
            "minimum": 0
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowedClients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "roleType"
        ],
        "additionalProperties": false
      },
      "NewRole": {
        "title": "NewRole",
        "type": "object",
        "description": "(tsType: Omit<Role, 'id'>, schemaOptions: { title: 'NewRole', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleType": {
            "type": "number",
            "maximum": 15,
            "minimum": 0
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowedClients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "roleType"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Role, 'id'>"
      },
      "GroupWithRelations": {
        "title": "GroupWithRelations",
        "type": "object",
        "description": "(tsType: GroupWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "photoUrl": {
            "type": "string"
          },
          "groupType": {
            "type": "string",
            "enum": [
              "Tenant"
            ]
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroupWithRelations"
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "GroupWithRelations"
      },
      "TenantConfigWithRelations": {
        "title": "TenantConfigWithRelations",
        "type": "object",
        "description": "(tsType: TenantConfigWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "configKey": {
            "type": "string"
          },
          "configValue": {
            "type": "object"
          },
          "tenantId": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantWithRelations"
          }
        },
        "required": [
          "configKey",
          "tenantId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TenantConfigWithRelations"
      },
      "TenantWithRelations": {
        "title": "TenantWithRelations",
        "type": "object",
        "description": "signature for all tenants (tsType: TenantWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "description": "Tenant status - Active or Inactive",
            "enum": [
              1,
              0
            ],
            "nullable": true
          },
          "key": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "primaryContactEmail": {
            "type": "string"
          },
          "allowedDomain": {
            "type": "string"
          },
          "tenantType": {
            "type": "string"
          },
          "tenantConfigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantConfigWithRelations"
            }
          },
          "userTenants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTenantWithRelations"
            }
          }
        },
        "required": [
          "name",
          "status"
        ],
        "additionalProperties": false
      },
      "UserCredentialsWithRelations": {
        "title": "UserCredentialsWithRelations",
        "type": "object",
        "description": "(tsType: UserCredentialsWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "authProvider": {
            "type": "string"
          },
          "authId": {
            "type": "string"
          },
          "authToken": {
            "type": "string"
          },
          "secretKey": {
            "type": "string",
            "description": "Secret for Authenticator app"
          },
          "password": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserWithRelations"
          }
        },
        "required": [
          "authProvider",
          "userId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserCredentialsWithRelations"
      },
      "UserWithRelations": {
        "title": "UserWithRelations",
        "type": "object",
        "description": "This is signature for user model. (tsType: UserWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "pattern": "^\\+?[1-9]\\d{1,14}$"
          },
          "authClientIds": {
            "type": "string"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "photoUrl": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "description": "This field takes a single character as input in database.\n    'M' for male and 'F' for female.",
            "enum": [
              "M",
              "F",
              "O"
            ]
          },
          "dob": {
            "type": "string",
            "format": "date-time"
          },
          "defaultTenantId": {
            "type": "string"
          },
          "defaultTenant": {
            "$ref": "#/components/schemas/TenantWithRelations"
          },
          "credentials": {
            "$ref": "#/components/schemas/UserCredentialsWithRelations"
          },
          "userTenants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTenantWithRelations"
            }
          }
        },
        "required": [
          "firstName",
          "username",
          "email"
        ],
        "additionalProperties": false
      },
      "UserLevelPermissionWithRelations": {
        "title": "UserLevelPermissionWithRelations",
        "type": "object",
        "description": "(tsType: UserLevelPermissionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "permission": {
            "type": "string"
          },
          "allowed": {
            "type": "boolean"
          },
          "userTenantId": {
            "type": "string"
          },
          "userTenant": {
            "$ref": "#/components/schemas/UserTenantWithRelations"
          }
        },
        "required": [
          "permission",
          "allowed",
          "userTenantId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserLevelPermissionWithRelations"
      },
      "UserGroupWithRelations": {
        "title": "UserGroupWithRelations",
        "type": "object",
        "description": "(tsType: UserGroupWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "userTenantId": {
            "type": "string"
          },
          "isOwner": {
            "type": "boolean"
          },
          "group": {
            "$ref": "#/components/schemas/GroupWithRelations"
          },
          "userTenant": {
            "$ref": "#/components/schemas/UserTenantWithRelations"
          }
        },
        "required": [
          "groupId",
          "userTenantId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserGroupWithRelations"
      },
      "UserTenantWithRelations": {
        "title": "UserTenantWithRelations",
        "type": "object",
        "description": "(tsType: UserTenantWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "maximum": 12,
            "minimum": 0
          },
          "userId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserWithRelations"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantWithRelations"
          },
          "role": {
            "$ref": "#/components/schemas/RoleWithRelations"
          },
          "userLevelPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserLevelPermissionWithRelations"
            }
          },
          "userGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroupWithRelations"
            }
          }
        },
        "required": [
          "userId",
          "tenantId",
          "roleId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserTenantWithRelations"
      },
      "UserViewWithRelations": {
        "title": "UserViewWithRelations",
        "type": "object",
        "description": "User details view in DB (tsType: UserViewWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "authClientIds": {
            "type": "string"
          },
          "lastLogin": {
            "type": "string"
          },
          "photoUrl": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "description": "This field takes a single character as input in database.\n    'M' for male and 'F' for female.",
            "enum": [
              "M",
              "F",
              "O"
            ]
          },
          "dob": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultTenantId": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "maximum": 11,
            "minimum": 0
          },
          "tenantId": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          },
          "tenantName": {
            "type": "string"
          },
          "tenantKey": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          },
          "roleType": {
            "type": "number"
          },
          "userTenantId": {
            "type": "string"
          },
          "expiresOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "firstName",
          "username",
          "email",
          "defaultTenantId",
          "tenantId",
          "roleId",
          "tenantName",
          "userTenantId"
        ],
        "additionalProperties": false
      },
      "RoleWithRelations": {
        "title": "RoleWithRelations",
        "type": "object",
        "description": "(tsType: RoleWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleType": {
            "type": "number",
            "maximum": 15,
            "minimum": 0
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowedClients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userTenants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTenantWithRelations"
            }
          },
          "createdByUser": {
            "$ref": "#/components/schemas/UserViewWithRelations"
          },
          "modifiedByUser": {
            "$ref": "#/components/schemas/UserViewWithRelations"
          }
        },
        "required": [
          "name",
          "roleType"
        ],
        "additionalProperties": false,
        "x-typescript-type": "RoleWithRelations"
      },
      "RolePartial": {
        "title": "RolePartial",
        "type": "object",
        "description": "(tsType: Partial<Role>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "roleType": {
            "type": "number",
            "maximum": 15,
            "minimum": 0
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowedClients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Role>"
      },
      "User": {
        "title": "User",
        "type": "object",
        "description": "This is signature for user model.",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "pattern": "^\\+?[1-9]\\d{1,14}$"
          },
          "authClientIds": {
            "type": "string"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "photoUrl": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "description": "This field takes a single character as input in database.\n    'M' for male and 'F' for female.",
            "enum": [
              "M",
              "F",
              "O"
            ]
          },
          "dob": {
            "type": "string",
            "format": "date-time"
          },
          "defaultTenantId": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "username",
          "email"
        ],
        "additionalProperties": false
      },
      "UserDto": {
        "title": "UserDto",
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "authProvider": {
            "type": "string"
          },
          "authId": {
            "type": "string"
          },
          "userTenantId": {
            "type": "string"
          },
          "userDetails": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "roleId",
          "tenantId"
        ],
        "additionalProperties": false
      },
      "UserOptional_tenantId_": {
        "title": "UserOptional_tenantId_",
        "type": "object",
        "description": "This is signature for user model. (tsType: @loopback/repository-json-schema#Optional<User, 'tenantId'>, schemaOptions: { optional: [ 'tenantId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "pattern": "^\\+?[1-9]\\d{1,14}$"
          },
          "authClientIds": {
            "type": "string"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "photoUrl": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "description": "This field takes a single character as input in database.\n    'M' for male and 'F' for female.",
            "enum": [
              "M",
              "F",
              "O"
            ]
          },
          "dob": {
            "type": "string",
            "format": "date-time"
          },
          "defaultTenantId": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "username",
          "email"
        ],
        "additionalProperties": false
      },
      "NewUser": {
        "title": "NewUser",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<UserDto, 'tenantId'>, schemaOptions: { title: 'NewUser', optional: [ 'tenantId' ] })",
        "properties": {
          "roleId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "authProvider": {
            "type": "string"
          },
          "authId": {
            "type": "string"
          },
          "userTenantId": {
            "type": "string"
          },
          "userDetails": {
            "$ref": "#/components/schemas/UserOptional_tenantId_"
          }
        },
        "required": [
          "roleId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<UserDto, 'tenantId'>"
      },
      "UserViewPartial": {
        "title": "UserViewPartial",
        "type": "object",
        "description": "User details view in DB (tsType: Partial<UserView>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "authClientIds": {
            "type": "string"
          },
          "lastLogin": {
            "type": "string"
          },
          "photoUrl": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "description": "This field takes a single character as input in database.\n    'M' for male and 'F' for female.",
            "enum": [
              "M",
              "F",
              "O"
            ]
          },
          "dob": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultTenantId": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "maximum": 11,
            "minimum": 0
          },
          "tenantId": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          },
          "tenantName": {
            "type": "string"
          },
          "tenantKey": {
            "type": "string"
          },
          "roleName": {
            "type": "string"
          },
          "roleType": {
            "type": "number"
          },
          "userTenantId": {
            "type": "string"
          },
          "expiresOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Tenant": {
        "title": "Tenant",
        "type": "object",
        "description": "signature for all tenants",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "description": "Tenant status - Active or Inactive",
            "enum": [
              1,
              0
            ],
            "nullable": true
          },
          "key": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "primaryContactEmail": {
            "type": "string"
          },
          "allowedDomain": {
            "type": "string"
          },
          "tenantType": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "status"
        ],
        "additionalProperties": false
      },
      "NewTenant": {
        "title": "NewTenant",
        "type": "object",
        "description": "signature for all tenants (tsType: Omit<Tenant, 'id' | 'status'>, schemaOptions: { title: 'NewTenant', exclude: [ 'id', 'status' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "primaryContactEmail": {
            "type": "string"
          },
          "allowedDomain": {
            "type": "string"
          },
          "tenantType": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "TenantPartial": {
        "title": "TenantPartial",
        "type": "object",
        "description": "signature for all tenants (tsType: Partial<Tenant>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "number",
            "description": "Tenant status - Active or Inactive",
            "enum": [
              1,
              0
            ],
            "nullable": true
          },
          "key": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "primaryContactEmail": {
            "type": "string"
          },
          "allowedDomain": {
            "type": "string"
          },
          "tenantType": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TenantConfig": {
        "title": "TenantConfig",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "configKey": {
            "type": "string"
          },
          "configValue": {
            "type": "object"
          },
          "tenantId": {
            "type": "string"
          }
        },
        "required": [
          "configKey",
          "tenantId"
        ],
        "additionalProperties": false
      },
      "UserGroup": {
        "title": "UserGroup",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "userTenantId": {
            "type": "string"
          },
          "isOwner": {
            "type": "boolean"
          }
        },
        "required": [
          "groupId",
          "userTenantId"
        ],
        "additionalProperties": false
      },
      "NewUserGroupInGroup": {
        "title": "NewUserGroupInGroup",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<UserGroup, 'id'>, 'groupId'>, schemaOptions: { title: 'NewUserGroupInGroup', exclude: [ 'id' ], optional: [ 'groupId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "userTenantId": {
            "type": "string"
          },
          "isOwner": {
            "type": "boolean"
          }
        },
        "required": [
          "userTenantId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<UserGroup, 'id'>, 'groupId'>"
      },
      "UserGroupPartial": {
        "title": "UserGroupPartial",
        "type": "object",
        "description": "(tsType: Partial<UserGroup>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "userTenantId": {
            "type": "string"
          },
          "isOwner": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<UserGroup>"
      },
      "UserSignupCheckDto": {
        "title": "UserSignupCheckDto",
        "type": "object",
        "properties": {
          "isSignedUp": {
            "type": "boolean"
          }
        },
        "required": [
          "isSignedUp"
        ],
        "additionalProperties": false
      },
      "UserTenantPrefs": {
        "title": "UserTenantPrefs",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "configKey": {
            "type": "string"
          },
          "configValue": {
            "type": "object"
          },
          "userTenantId": {
            "type": "string"
          }
        },
        "required": [
          "configKey",
          "configValue"
        ],
        "additionalProperties": false
      },
      "NewUserTenantPrefs": {
        "title": "NewUserTenantPrefs",
        "type": "object",
        "description": "(tsType: Omit<UserTenantPrefs, 'id'>, schemaOptions: { title: 'NewUserTenantPrefs', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "configKey": {
            "type": "string"
          },
          "configValue": {
            "type": "object"
          },
          "userTenantId": {
            "type": "string"
          }
        },
        "required": [
          "configKey",
          "configValue"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<UserTenantPrefs, 'id'>"
      },
      "UserTenantPrefsWithRelations": {
        "title": "UserTenantPrefsWithRelations",
        "type": "object",
        "description": "(tsType: UserTenantPrefsWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "configKey": {
            "type": "string"
          },
          "configValue": {
            "type": "object"
          },
          "userTenantId": {
            "type": "string"
          },
          "userTenant": {
            "$ref": "#/components/schemas/UserTenantWithRelations"
          }
        },
        "required": [
          "configKey",
          "configValue"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserTenantPrefsWithRelations"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "groups.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "groups.ScopeFilter"
      },
      "groups.IncludeFilter.Items": {
        "title": "groups.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "userGroups"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/groups.ScopeFilter"
          }
        }
      },
      "groups.Filter": {
        "type": "object",
        "title": "groups.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "groups.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "photoUrl": {
                    "type": "boolean"
                  },
                  "groupType": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "name",
                    "description",
                    "photoUrl",
                    "groupType"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "groups.Fields"
          },
          "include": {
            "title": "groups.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/groups.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Group>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        }
      },
      "roles.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "roles.ScopeFilter"
      },
      "roles.IncludeFilter.Items": {
        "title": "roles.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "userTenants",
              "createdByUser",
              "modifiedByUser"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/roles.ScopeFilter"
          }
        }
      },
      "roles.Filter": {
        "type": "object",
        "title": "roles.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "roles.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "roleType": {
                    "type": "boolean"
                  },
                  "permissions": {
                    "type": "boolean"
                  },
                  "allowedClients": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "name",
                    "roleType",
                    "permissions",
                    "allowedClients"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "roles.Fields"
          },
          "include": {
            "title": "roles.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/roles.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Role>"
      },
      "v_users.Filter": {
        "type": "object",
        "title": "v_users.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "v_users.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "middleName": {
                    "type": "boolean"
                  },
                  "username": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "designation": {
                    "type": "boolean"
                  },
                  "phone": {
                    "type": "boolean"
                  },
                  "authClientIds": {
                    "type": "boolean"
                  },
                  "lastLogin": {
                    "type": "boolean"
                  },
                  "photoUrl": {
                    "type": "boolean"
                  },
                  "gender": {
                    "type": "boolean"
                  },
                  "dob": {
                    "type": "boolean"
                  },
                  "defaultTenantId": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "roleId": {
                    "type": "boolean"
                  },
                  "tenantName": {
                    "type": "boolean"
                  },
                  "tenantKey": {
                    "type": "boolean"
                  },
                  "roleName": {
                    "type": "boolean"
                  },
                  "roleType": {
                    "type": "boolean"
                  },
                  "userTenantId": {
                    "type": "boolean"
                  },
                  "expiresOn": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "firstName",
                    "lastName",
                    "middleName",
                    "username",
                    "email",
                    "designation",
                    "phone",
                    "authClientIds",
                    "lastLogin",
                    "photoUrl",
                    "gender",
                    "dob",
                    "defaultTenantId",
                    "status",
                    "tenantId",
                    "roleId",
                    "tenantName",
                    "tenantKey",
                    "roleName",
                    "roleType",
                    "userTenantId",
                    "expiresOn"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "v_users.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<UserView>"
      },
      "tenants.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "tenants.ScopeFilter"
      },
      "tenants.IncludeFilter.Items": {
        "title": "tenants.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "tenantConfigs",
              "userTenants"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/tenants.ScopeFilter"
          }
        }
      },
      "tenants.Filter": {
        "type": "object",
        "title": "tenants.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "key": {
                    "type": "boolean"
                  },
                  "website": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "city": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "zip": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "primaryContactEmail": {
                    "type": "boolean"
                  },
                  "allowedDomain": {
                    "type": "boolean"
                  },
                  "tenantType": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "name",
                    "status",
                    "key",
                    "website",
                    "address",
                    "city",
                    "state",
                    "zip",
                    "country",
                    "primaryContactEmail",
                    "allowedDomain",
                    "tenantType"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "tenants.Fields"
          },
          "include": {
            "title": "tenants.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/tenants.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Tenant>"
      },
      "tenants.Filter1": {
        "type": "object",
        "title": "tenants.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "tenants.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "key": {
                    "type": "boolean"
                  },
                  "website": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "boolean"
                  },
                  "city": {
                    "type": "boolean"
                  },
                  "state": {
                    "type": "boolean"
                  },
                  "zip": {
                    "type": "boolean"
                  },
                  "country": {
                    "type": "boolean"
                  },
                  "primaryContactEmail": {
                    "type": "boolean"
                  },
                  "allowedDomain": {
                    "type": "boolean"
                  },
                  "tenantType": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "name",
                    "status",
                    "key",
                    "website",
                    "address",
                    "city",
                    "state",
                    "zip",
                    "country",
                    "primaryContactEmail",
                    "allowedDomain",
                    "tenantType"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "tenants.Fields"
          },
          "include": {
            "title": "tenants.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/tenants.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Tenant>"
      },
      "user_tenant_prefs.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "user_tenant_prefs.ScopeFilter"
      },
      "user_tenant_prefs.IncludeFilter.Items": {
        "title": "user_tenant_prefs.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "userTenant"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/user_tenant_prefs.ScopeFilter"
          }
        }
      },
      "user_tenant_prefs.Filter": {
        "type": "object",
        "title": "user_tenant_prefs.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "user_tenant_prefs.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "configKey": {
                    "type": "boolean"
                  },
                  "configValue": {
                    "type": "boolean"
                  },
                  "userTenantId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "configKey",
                    "configValue",
                    "userTenantId"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "user_tenant_prefs.Fields"
          },
          "include": {
            "title": "user_tenant_prefs.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/user_tenant_prefs.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<UserTenantPrefs>"
      },
      "v_users.Filter1": {
        "type": "object",
        "title": "v_users.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "middleName": {
                    "type": "boolean"
                  },
                  "username": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "designation": {
                    "type": "boolean"
                  },
                  "phone": {
                    "type": "boolean"
                  },
                  "authClientIds": {
                    "type": "boolean"
                  },
                  "lastLogin": {
                    "type": "boolean"
                  },
                  "photoUrl": {
                    "type": "boolean"
                  },
                  "gender": {
                    "type": "boolean"
                  },
                  "dob": {
                    "type": "boolean"
                  },
                  "defaultTenantId": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "tenantId": {
                    "type": "boolean"
                  },
                  "roleId": {
                    "type": "boolean"
                  },
                  "tenantName": {
                    "type": "boolean"
                  },
                  "tenantKey": {
                    "type": "boolean"
                  },
                  "roleName": {
                    "type": "boolean"
                  },
                  "roleType": {
                    "type": "boolean"
                  },
                  "userTenantId": {
                    "type": "boolean"
                  },
                  "expiresOn": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "firstName",
                    "lastName",
                    "middleName",
                    "username",
                    "email",
                    "designation",
                    "phone",
                    "authClientIds",
                    "lastLogin",
                    "photoUrl",
                    "gender",
                    "dob",
                    "defaultTenantId",
                    "status",
                    "tenantId",
                    "roleId",
                    "tenantName",
                    "tenantKey",
                    "roleName",
                    "roleType",
                    "userTenantId",
                    "expiresOn"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "v_users.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<UserView>"
      }
    }
  }
}
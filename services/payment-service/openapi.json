{
  "openapi": "3.0.0",
  "info": {
    "title": "@sourceloop/payment-service",
    "version": "12.0.1",
    "description": "payment microservice.",
    "contact": {
      "name": "Sourcefuse"
    }
  },
  "paths": {
    "/create-subscription-and-pay": {
      "post": {
        "x-controller-name": "SubscriptionTransactionsController",
        "x-operation-name": "subscriptionandtransactionscreate",
        "tags": [
          "SubscriptionTransactionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "302": {
            "description": "Subscription model instance",
            "content": {
              "text/html": {}
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateSubscription   |\n| 2   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "SubscriptionTransactionsController.subscriptionandtransactionscreate"
      }
    },
    "/orders/count": {
      "get": {
        "x-controller-name": "OrdersController",
        "x-operation-name": "count",
        "tags": [
          "OrdersController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Orders model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewOrder   |\n| 7   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "orders.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Orders>"
                }
              }
            }
          }
        ],
        "operationId": "OrdersController.count"
      }
    },
    "/orders/{id}": {
      "put": {
        "x-controller-name": "OrdersController",
        "x-operation-name": "replaceById",
        "tags": [
          "OrdersController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Orders PUT success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateOrder   |\n| 8   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orders"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "OrdersController.replaceById"
      },
      "patch": {
        "x-controller-name": "OrdersController",
        "x-operation-name": "updateById",
        "tags": [
          "OrdersController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Orders PATCH success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateOrder   |\n| 8   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "OrdersController.updateById"
      },
      "get": {
        "x-controller-name": "OrdersController",
        "x-operation-name": "findById",
        "tags": [
          "OrdersController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Orders model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewOrder   |\n| 7   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orders.Filter"
                }
              }
            }
          }
        ],
        "operationId": "OrdersController.findById"
      },
      "delete": {
        "x-controller-name": "OrdersController",
        "x-operation-name": "deleteById",
        "tags": [
          "OrdersController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Orders DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| DeleteOrder   |\n| 9   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "OrdersController.deleteById"
      }
    },
    "/orders": {
      "post": {
        "x-controller-name": "OrdersController",
        "x-operation-name": "create",
        "tags": [
          "OrdersController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Orders model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orders"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateOrder   |\n| 6   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewOrders"
              }
            }
          }
        },
        "operationId": "OrdersController.create"
      },
      "patch": {
        "x-controller-name": "OrdersController",
        "x-operation-name": "updateAll",
        "tags": [
          "OrdersController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Orders PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateOrder   |\n| 8   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "orders.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Orders>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersPartial"
              }
            }
          }
        },
        "operationId": "OrdersController.updateAll"
      },
      "get": {
        "x-controller-name": "OrdersController",
        "x-operation-name": "find",
        "tags": [
          "OrdersController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Orders model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrdersWithRelations"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewOrder   |\n| 7   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orders.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "OrdersController.find"
      }
    },
    "/payment-gateways/count": {
      "get": {
        "x-controller-name": "PaymentGatewaysController",
        "x-operation-name": "count",
        "tags": [
          "PaymentGatewaysController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "PaymentGateways model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewGateway   |\n| 12   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "paymentgateways.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<PaymentGateways>"
                }
              }
            }
          }
        ],
        "operationId": "PaymentGatewaysController.count"
      }
    },
    "/payment-gateways/{id}": {
      "put": {
        "x-controller-name": "PaymentGatewaysController",
        "x-operation-name": "replaceById",
        "tags": [
          "PaymentGatewaysController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "PaymentGateways PUT success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateGateway   |\n| 11   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentGateways"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "PaymentGatewaysController.replaceById"
      },
      "patch": {
        "x-controller-name": "PaymentGatewaysController",
        "x-operation-name": "updateById",
        "tags": [
          "PaymentGatewaysController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "PaymentGateways PATCH success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateGateway   |\n| 11   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentGatewaysPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "PaymentGatewaysController.updateById"
      },
      "get": {
        "x-controller-name": "PaymentGatewaysController",
        "x-operation-name": "findById",
        "tags": [
          "PaymentGatewaysController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "PaymentGateways model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentGatewaysWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewGateway   |\n| 12   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/paymentgateways.Filter"
                }
              }
            }
          }
        ],
        "operationId": "PaymentGatewaysController.findById"
      },
      "delete": {
        "x-controller-name": "PaymentGatewaysController",
        "x-operation-name": "deleteById",
        "tags": [
          "PaymentGatewaysController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "PaymentGateways DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| DeleteGateway   |\n| 13   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "PaymentGatewaysController.deleteById"
      }
    },
    "/payment-gateways": {
      "post": {
        "x-controller-name": "PaymentGatewaysController",
        "x-operation-name": "create",
        "tags": [
          "PaymentGatewaysController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "PaymentGateways model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentGateways"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateGateway   |\n| 10   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPaymentGateways"
              }
            }
          }
        },
        "operationId": "PaymentGatewaysController.create"
      },
      "patch": {
        "x-controller-name": "PaymentGatewaysController",
        "x-operation-name": "updateAll",
        "tags": [
          "PaymentGatewaysController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "PaymentGateways PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateGateway   |\n| 11   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "paymentgateways.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<PaymentGateways>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentGatewaysPartial"
              }
            }
          }
        },
        "operationId": "PaymentGatewaysController.updateAll"
      },
      "get": {
        "x-controller-name": "PaymentGatewaysController",
        "x-operation-name": "find",
        "tags": [
          "PaymentGatewaysController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of PaymentGateways model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewaysWithRelations"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewGateway   |\n| 12   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/paymentgateways.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "PaymentGatewaysController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    },
    "/place-order-and-pay": {
      "post": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "orderandtransactionscreate",
        "tags": [
          "TransactionsController"
        ],
        "responses": {
          "302": {
            "description": "Order model instance",
            "content": {
              "text/html": {}
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "TransactionsController.orderandtransactionscreate"
      }
    },
    "/subscription/transaction/charge": {
      "post": {
        "x-controller-name": "SubscriptionTransactionsController",
        "x-operation-name": "subscriptionTransactionscharge",
        "tags": [
          "SubscriptionTransactionsController"
        ],
        "responses": {
          "200": {
            "description": "Subscription model instance",
            "content": {
              "application/json": {}
            }
          }
        },
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "SubscriptionTransactionsController.subscriptionTransactionscharge"
      }
    },
    "/subscriptions/count": {
      "get": {
        "x-controller-name": "SubscriptionsController",
        "x-operation-name": "count",
        "tags": [
          "SubscriptionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscriptions model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| GetSubscriptionCount   |\n| 1   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "subscriptions.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Subscriptions>"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionsController.count"
      }
    },
    "/subscriptions/{id}": {
      "put": {
        "x-controller-name": "SubscriptionsController",
        "x-operation-name": "replaceById",
        "tags": [
          "SubscriptionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Subscriptions PUT success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateSubscriptions   |\n| 4   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscriptions"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SubscriptionsController.replaceById"
      },
      "patch": {
        "x-controller-name": "SubscriptionsController",
        "x-operation-name": "updateById",
        "tags": [
          "SubscriptionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Subscriptions PATCH success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateSubscriptions   |\n| 4   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionsPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SubscriptionsController.updateById"
      },
      "get": {
        "x-controller-name": "SubscriptionsController",
        "x-operation-name": "findById",
        "tags": [
          "SubscriptionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscriptions model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| GetSubscriptions   |\n| 3   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptions.Filter"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionsController.findById"
      },
      "delete": {
        "x-controller-name": "SubscriptionsController",
        "x-operation-name": "deleteById",
        "tags": [
          "SubscriptionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Subscriptions DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| DeleteSubscriptions   |\n| 5   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "SubscriptionsController.deleteById"
      }
    },
    "/subscriptions": {
      "post": {
        "x-controller-name": "SubscriptionsController",
        "x-operation-name": "create",
        "tags": [
          "SubscriptionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscriptions model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscriptions"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateSubscription   |\n| 2   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSubscriptions"
              }
            }
          }
        },
        "operationId": "SubscriptionsController.create"
      },
      "patch": {
        "x-controller-name": "SubscriptionsController",
        "x-operation-name": "updateAll",
        "tags": [
          "SubscriptionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscriptions PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateSubscriptions   |\n| 4   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "subscriptions.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Subscriptions>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionsPartial"
              }
            }
          }
        },
        "operationId": "SubscriptionsController.updateAll"
      },
      "get": {
        "x-controller-name": "SubscriptionsController",
        "x-operation-name": "find",
        "tags": [
          "SubscriptionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Subscriptions model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionsWithRelations"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| GetSubscriptions   |\n| 3   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptions.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "SubscriptionsController.find"
      }
    },
    "/templates/count": {
      "get": {
        "x-controller-name": "TemplatesController",
        "x-operation-name": "count",
        "tags": [
          "TemplatesController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Templates model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewTemplate   |\n| 16   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "templates.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Templates>"
                }
              }
            }
          }
        ],
        "operationId": "TemplatesController.count"
      }
    },
    "/templates/{id}": {
      "put": {
        "x-controller-name": "TemplatesController",
        "x-operation-name": "replaceById",
        "tags": [
          "TemplatesController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Templates PUT success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateTemplate   |\n| 15   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Templates"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TemplatesController.replaceById"
      },
      "patch": {
        "x-controller-name": "TemplatesController",
        "x-operation-name": "updateById",
        "tags": [
          "TemplatesController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Templates PATCH success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateTemplate   |\n| 15   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatesPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TemplatesController.updateById"
      },
      "get": {
        "x-controller-name": "TemplatesController",
        "x-operation-name": "findById",
        "tags": [
          "TemplatesController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Templates model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplatesWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewTemplate   |\n| 16   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/templates.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TemplatesController.findById"
      },
      "delete": {
        "x-controller-name": "TemplatesController",
        "x-operation-name": "deleteById",
        "tags": [
          "TemplatesController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Templates DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| DeleteTemplate   |\n| 17   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TemplatesController.deleteById"
      }
    },
    "/templates": {
      "post": {
        "x-controller-name": "TemplatesController",
        "x-operation-name": "create",
        "tags": [
          "TemplatesController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Templates model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Templates"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateTemplate   |\n| 14   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTemplates"
              }
            }
          }
        },
        "operationId": "TemplatesController.create"
      },
      "patch": {
        "x-controller-name": "TemplatesController",
        "x-operation-name": "updateAll",
        "tags": [
          "TemplatesController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Templates PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateTemplate   |\n| 15   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "templates.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Templates>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatesPartial"
              }
            }
          }
        },
        "operationId": "TemplatesController.updateAll"
      },
      "get": {
        "x-controller-name": "TemplatesController",
        "x-operation-name": "find",
        "tags": [
          "TemplatesController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Templates model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplatesWithRelations"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewTemplate   |\n| 16   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/templates.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "TemplatesController.find"
      }
    },
    "/transactions/charge": {
      "post": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "transactionscharge",
        "tags": [
          "TransactionsController"
        ],
        "responses": {
          "200": {
            "description": "Transacttion Gateway Request",
            "content": {
              "application/json": {}
            }
          }
        },
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "TransactionsController.transactionscharge"
      }
    },
    "/transactions/count": {
      "get": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "count",
        "tags": [
          "TransactionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewTransaction   |\n| 19   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "transactions.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Transactions>"
                }
              }
            }
          }
        ],
        "operationId": "TransactionsController.count"
      }
    },
    "/transactions/orderid/{id}": {
      "get": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "transactionsPay",
        "tags": [
          "TransactionsController"
        ],
        "responses": {
          "200": {
            "description": "HTML response for payment gateway interface.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TransactionsController.transactionsPay"
      }
    },
    "/transactions/refund/parse/{id}": {
      "get": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "transactionsRefundParse",
        "tags": [
          "TransactionsController"
        ],
        "responses": {
          "200": {
            "description": "Refund Object from payment gateway",
            "content": {
              "application/json": {}
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TransactionsController.transactionsRefundParse"
      }
    },
    "/transactions/refund/{id}": {
      "post": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "transactionsRefund",
        "tags": [
          "TransactionsController"
        ],
        "responses": {
          "200": {
            "description": "Refund Object from payment gateway",
            "content": {
              "application/json": {}
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TransactionsController.transactionsRefund"
      }
    },
    "/transactions/subscription/{id}": {
      "get": {
        "x-controller-name": "TransactionSubscriptionsController",
        "x-operation-name": "subscriptionTransactionsPay",
        "tags": [
          "TransactionSubscriptionsController"
        ],
        "responses": {
          "302": {
            "description": "Array of Transactions model instances",
            "content": {
              "text/html": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TransactionSubscriptionsController.subscriptionTransactionsPay"
      }
    },
    "/transactions/webhook": {
      "post": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "subscriptionWebHook",
        "tags": [
          "TransactionsController"
        ],
        "responses": {
          "200": {
            "description": "Subscription Gateway Request",
            "content": {
              "application/json": {}
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "TransactionsController.subscriptionWebHook"
      }
    },
    "/transactions/{id}": {
      "put": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "replaceById",
        "tags": [
          "TransactionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Transactions PUT success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateTransaction   |\n| 20   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transactions"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TransactionsController.replaceById"
      },
      "patch": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "updateById",
        "tags": [
          "TransactionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Transactions PATCH success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateTransaction   |\n| 20   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TransactionsController.updateById"
      },
      "get": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "findById",
        "tags": [
          "TransactionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewTransaction   |\n| 19   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transactions.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TransactionsController.findById"
      },
      "delete": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "deleteById",
        "tags": [
          "TransactionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Transactions DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| DeleteTransaction   |\n| 21   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TransactionsController.deleteById"
      }
    },
    "/transactions": {
      "post": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "create",
        "tags": [
          "TransactionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transactions"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateTransaction   |\n| 18   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTransactions"
              }
            }
          }
        },
        "operationId": "TransactionsController.create"
      },
      "patch": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "updateAll",
        "tags": [
          "TransactionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateTransaction   |\n| 20   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "transactions.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Transactions>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsPartial"
              }
            }
          }
        },
        "operationId": "TransactionsController.updateAll"
      },
      "get": {
        "x-controller-name": "TransactionsController",
        "x-operation-name": "find",
        "tags": [
          "TransactionsController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Transactions model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionsWithRelations"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewTransaction   |\n| 19   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transactions.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "TransactionsController.find"
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "components": {
    "schemas": {
      "Orders": {
        "title": "Orders",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "paymentmethod": {
            "type": "string"
          },
          "metaData": {
            "type": "object"
          }
        },
        "required": [
          "totalAmount",
          "currency",
          "status",
          "paymentGatewayId"
        ],
        "additionalProperties": false
      },
      "NewOrders": {
        "title": "NewOrders",
        "type": "object",
        "description": "(tsType: Orders, schemaOptions: { title: 'NewOrders' })",
        "properties": {
          "id": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "paymentmethod": {
            "type": "string"
          },
          "metaData": {
            "type": "object"
          }
        },
        "required": [
          "totalAmount",
          "currency",
          "status",
          "paymentGatewayId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Orders"
      },
      "OrdersWithRelations": {
        "title": "OrdersWithRelations",
        "type": "object",
        "description": "(tsType: OrdersWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "paymentmethod": {
            "type": "string"
          },
          "metaData": {
            "type": "object"
          }
        },
        "required": [
          "totalAmount",
          "currency",
          "status",
          "paymentGatewayId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "OrdersWithRelations"
      },
      "OrdersPartial": {
        "title": "OrdersPartial",
        "type": "object",
        "description": "(tsType: Partial<Orders>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "paymentmethod": {
            "type": "string"
          },
          "metaData": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Orders>"
      },
      "Transactions": {
        "title": "Transactions",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "amountPaid": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paidDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "res": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "amountPaid",
          "currency",
          "status"
        ],
        "additionalProperties": false
      },
      "NewTransactions": {
        "title": "NewTransactions",
        "type": "object",
        "description": "(tsType: Transactions, schemaOptions: { title: 'NewTransactions' })",
        "properties": {
          "id": {
            "type": "string"
          },
          "amountPaid": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paidDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "res": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "amountPaid",
          "currency",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Transactions"
      },
      "TransactionsWithRelations": {
        "title": "TransactionsWithRelations",
        "type": "object",
        "description": "(tsType: TransactionsWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "amountPaid": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paidDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "res": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "amountPaid",
          "currency",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TransactionsWithRelations"
      },
      "TransactionsPartial": {
        "title": "TransactionsPartial",
        "type": "object",
        "description": "(tsType: Partial<Transactions>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "amountPaid": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paidDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "res": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Transactions>"
      },
      "PaymentGateways": {
        "title": "PaymentGateways",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gatewayType": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "gatewayType",
          "enabled"
        ],
        "additionalProperties": false
      },
      "NewPaymentGateways": {
        "title": "NewPaymentGateways",
        "type": "object",
        "description": "(tsType: PaymentGateways, schemaOptions: { title: 'NewPaymentGateways' })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gatewayType": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "gatewayType",
          "enabled"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PaymentGateways"
      },
      "PaymentGatewaysWithRelations": {
        "title": "PaymentGatewaysWithRelations",
        "type": "object",
        "description": "(tsType: PaymentGatewaysWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gatewayType": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "gatewayType",
          "enabled"
        ],
        "additionalProperties": false,
        "x-typescript-type": "PaymentGatewaysWithRelations"
      },
      "PaymentGatewaysPartial": {
        "title": "PaymentGatewaysPartial",
        "type": "object",
        "description": "(tsType: Partial<PaymentGateways>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gatewayType": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<PaymentGateways>"
      },
      "Templates": {
        "title": "Templates",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "paymentGatewayId",
          "name",
          "template",
          "type"
        ],
        "additionalProperties": false
      },
      "NewTemplates": {
        "title": "NewTemplates",
        "type": "object",
        "description": "(tsType: Templates, schemaOptions: { title: 'NewTemplates' })",
        "properties": {
          "id": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "paymentGatewayId",
          "name",
          "template",
          "type"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Templates"
      },
      "TemplatesWithRelations": {
        "title": "TemplatesWithRelations",
        "type": "object",
        "description": "(tsType: TemplatesWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "paymentGatewayId",
          "name",
          "template",
          "type"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TemplatesWithRelations"
      },
      "TemplatesPartial": {
        "title": "TemplatesPartial",
        "type": "object",
        "description": "(tsType: Partial<Templates>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Templates>"
      },
      "Subscriptions": {
        "title": "Subscriptions",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "metaData": {
            "type": "object"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "gatewaySubscriptionId": {
            "type": "string"
          },
          "planId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "totalAmount",
          "status"
        ],
        "additionalProperties": false
      },
      "NewSubscriptions": {
        "title": "NewSubscriptions",
        "type": "object",
        "description": "(tsType: Subscriptions, schemaOptions: { title: 'NewSubscriptions' })",
        "properties": {
          "id": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "metaData": {
            "type": "object"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "gatewaySubscriptionId": {
            "type": "string"
          },
          "planId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "totalAmount",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Subscriptions"
      },
      "SubscriptionsWithRelations": {
        "title": "SubscriptionsWithRelations",
        "type": "object",
        "description": "(tsType: SubscriptionsWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "metaData": {
            "type": "object"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "gatewaySubscriptionId": {
            "type": "string"
          },
          "planId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "totalAmount",
          "status"
        ],
        "additionalProperties": false,
        "x-typescript-type": "SubscriptionsWithRelations"
      },
      "SubscriptionsPartial": {
        "title": "SubscriptionsPartial",
        "type": "object",
        "description": "(tsType: Partial<Subscriptions>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paymentGatewayId": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "metaData": {
            "type": "object"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "gatewaySubscriptionId": {
            "type": "string"
          },
          "planId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Subscriptions>"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "orders.Filter": {
        "type": "object",
        "title": "orders.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "totalAmount": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "paymentGatewayId": {
                    "type": "boolean"
                  },
                  "paymentmethod": {
                    "type": "boolean"
                  },
                  "metaData": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "totalAmount",
                    "currency",
                    "status",
                    "paymentGatewayId",
                    "paymentmethod",
                    "metaData"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "orders.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Orders>"
      },
      "orders.Filter1": {
        "type": "object",
        "title": "orders.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "orders.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "totalAmount": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "paymentGatewayId": {
                    "type": "boolean"
                  },
                  "paymentmethod": {
                    "type": "boolean"
                  },
                  "metaData": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "totalAmount",
                    "currency",
                    "status",
                    "paymentGatewayId",
                    "paymentmethod",
                    "metaData"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "orders.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Orders>"
      },
      "paymentgateways.Filter": {
        "type": "object",
        "title": "paymentgateways.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "gatewayType": {
                    "type": "boolean"
                  },
                  "enabled": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "gatewayType",
                    "enabled"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "paymentgateways.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<PaymentGateways>"
      },
      "paymentgateways.Filter1": {
        "type": "object",
        "title": "paymentgateways.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "paymentgateways.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "gatewayType": {
                    "type": "boolean"
                  },
                  "enabled": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "name",
                    "gatewayType",
                    "enabled"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "paymentgateways.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<PaymentGateways>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "subscriptions.Filter": {
        "type": "object",
        "title": "subscriptions.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "totalAmount": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "paymentGatewayId": {
                    "type": "boolean"
                  },
                  "paymentMethod": {
                    "type": "boolean"
                  },
                  "metaData": {
                    "type": "boolean"
                  },
                  "startDate": {
                    "type": "boolean"
                  },
                  "endDate": {
                    "type": "boolean"
                  },
                  "gatewaySubscriptionId": {
                    "type": "boolean"
                  },
                  "planId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "totalAmount",
                    "currency",
                    "status",
                    "paymentGatewayId",
                    "paymentMethod",
                    "metaData",
                    "startDate",
                    "endDate",
                    "gatewaySubscriptionId",
                    "planId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "subscriptions.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Subscriptions>"
      },
      "subscriptions.Filter1": {
        "type": "object",
        "title": "subscriptions.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "subscriptions.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "totalAmount": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "paymentGatewayId": {
                    "type": "boolean"
                  },
                  "paymentMethod": {
                    "type": "boolean"
                  },
                  "metaData": {
                    "type": "boolean"
                  },
                  "startDate": {
                    "type": "boolean"
                  },
                  "endDate": {
                    "type": "boolean"
                  },
                  "gatewaySubscriptionId": {
                    "type": "boolean"
                  },
                  "planId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "totalAmount",
                    "currency",
                    "status",
                    "paymentGatewayId",
                    "paymentMethod",
                    "metaData",
                    "startDate",
                    "endDate",
                    "gatewaySubscriptionId",
                    "planId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "subscriptions.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Subscriptions>"
      },
      "templates.Filter": {
        "type": "object",
        "title": "templates.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "paymentGatewayId": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "template": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "paymentGatewayId",
                    "name",
                    "template",
                    "type"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "templates.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Templates>"
      },
      "templates.Filter1": {
        "type": "object",
        "title": "templates.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "templates.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "paymentGatewayId": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "template": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "paymentGatewayId",
                    "name",
                    "template",
                    "type"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "templates.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Templates>"
      },
      "transactions.Filter": {
        "type": "object",
        "title": "transactions.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "amountPaid": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "paidDate": {
                    "type": "boolean"
                  },
                  "paymentGatewayId": {
                    "type": "boolean"
                  },
                  "orderId": {
                    "type": "boolean"
                  },
                  "res": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "amountPaid",
                    "currency",
                    "status",
                    "paidDate",
                    "paymentGatewayId",
                    "orderId",
                    "res"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "transactions.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Transactions>"
      },
      "transactions.Filter1": {
        "type": "object",
        "title": "transactions.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "transactions.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "amountPaid": {
                    "type": "boolean"
                  },
                  "currency": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "paidDate": {
                    "type": "boolean"
                  },
                  "paymentGatewayId": {
                    "type": "boolean"
                  },
                  "orderId": {
                    "type": "boolean"
                  },
                  "res": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "amountPaid",
                    "currency",
                    "status",
                    "paidDate",
                    "paymentGatewayId",
                    "orderId",
                    "res"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "transactions.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Transactions>"
      }
    }
  }
}
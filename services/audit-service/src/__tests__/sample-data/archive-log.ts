import {JSONObject} from '@loopback/core';
import {Action, AuditLog} from '@sourceloop/audit-log';
const tenantId = 'fac65aad-3f01-dd25-3ea0-ee6563fbe02b';
export const archiveLogs: AuditLog[] = [
  new AuditLog({
    id: '1',
    action: Action.INSERT_ONE,
    actedAt: new Date('2023-05-07T12:00:32.225Z'),
    actedOn: 'Product',
    actionKey: 'Product_logs',
    entityId: '143f43',
    actor: 'testUser',
    tenantId: tenantId,
    after: {
      id: 'efafcea',
      name: 'string',
      cost: 0,
      qty: 0,
      deleted: false,
    } as JSONObject,
  }),
  new AuditLog({
    id: '2',
    action: Action.UPDATE_ONE,
    actedAt: new Date('2023-05-09T12:00:32.225Z'),
    actedOn: 'Product',
    actionKey: 'Product_logs',
    entityId: '143f43',
    actor: 'testUser',
    tenantId: tenantId,
    before: {
      id: 'efafcea',
      name: 'stringssss',
      cost: 0,
      qty: 0,
      deleted: false,
    } as JSONObject,
    after: {
      id: 'efafcea',
      name: 'string',
      cost: 0,
      qty: 0,
      deleted: false,
    } as JSONObject,
  }),
  new AuditLog({
    id: '3',
    action: Action.INSERT_ONE,
    actedAt: new Date('2023-05-11T12:00:32.225Z'),
    actedOn: 'Product',
    tenantId: tenantId,
    actionKey: 'Product_logs',
    entityId: '14dvvds5',
    actor: 'testUser',
    after: {
      id: '14dvvds5',
      name: 'string',
      cost: 0,
      qty: 0,
      deleted: false,
    } as JSONObject,
  }),
  new AuditLog({
    id: '4',
    action: Action.INSERT_ONE,
    actedAt: new Date('2023-05-08T12:00:32.226Z'),
    actedOn: 'Product',
    actionKey: 'Product_logs',
    entityId: '143f43',
    tenantId: tenantId,
    actor: 'testUser',
    after: {
      id: 'efafcea',
      name: 'string',
      cost: 0,
      qty: 0,
      deleted: true,
    } as JSONObject,
  }),
  new AuditLog({
    id: '5',
    action: Action.INSERT_ONE,
    actedAt: new Date('2023-05-10T12:00:32.225Z'),
    actedOn: 'Product',
    actionKey: 'Product_logs',
    entityId: '143f43',
    actor: 'testUser',
    tenantId: tenantId,
    before: {
      id: 'efafcea',
      name: 'string',
      cost: 0,
      qty: 0,
      deleted: false,
    } as JSONObject,
  }),
  new AuditLog({
    id: '6',
    action: Action.INSERT_ONE,
    actedAt: new Date('2023-05-08T12:00:32.227Z'),
    actedOn: 'Collection',
    actionKey: 'Collection_logs',
    tenantId: tenantId,
    entityId: '143f42',
    actor: 'testUser',
    after: {
      id: 'efafcea',
      name: 'string',
      cost: 0,
      qty: 0,
      deleted: false,
    } as JSONObject,
  }),
];

export const archive1: AuditLog[] = [
  new AuditLog({
    id: '11',
    action: Action.INSERT_ONE,
    actedAt: new Date('2023-05-07T12:00:32.225Z'),
    actedOn: 'Product',
    tenantId: tenantId,
    actionKey: 'Product_logs',
    entityId: '143f43',
    actor: 'testUser',
    after: {
      id: 'efafcea',
      name: 'string',
      cost: 0,
      qty: 0,
      deleted: false,
    } as JSONObject,
  }),
  new AuditLog({
    id: '12',
    action: Action.UPDATE_ONE,
    actedAt: new Date('2023-05-09T12:00:32.225Z'),
    actedOn: 'Product',
    actionKey: 'Product_logs',
    entityId: '143f43',
    actor: 'testUser',
    tenantId: tenantId,
    before: {
      id: 'efafcea',
      name: 'stringssss',
      cost: 0,
      qty: 0,
      deleted: false,
    } as JSONObject,
    after: {
      id: 'efafcea',
      name: 'string',
      cost: 0,
      qty: 0,
      deleted: false,
    } as JSONObject,
  }),
  new AuditLog({
    id: '13',
    action: Action.INSERT_ONE,
    tenantId: tenantId,
    actedAt: new Date('2023-05-11T12:00:32.225Z'),
    actedOn: 'Product',
    actionKey: 'Product_logs',
    entityId: '14dvvds5',
    actor: 'testUser',
    after: {
      id: '14dvvds5',
      name: 'string',
      cost: 0,
      qty: 0,
      deleted: false,
    } as JSONObject,
  }),
];
export const archive2: AuditLog[] = [
  new AuditLog({
    id: '14',
    action: Action.INSERT_ONE,
    actedAt: new Date('2023-05-08T12:00:32.228Z'),
    actedOn: 'Product',
    tenantId: tenantId,
    actionKey: 'Product_logs',
    entityId: '143f43',
    actor: 'testUser',
    after: {
      id: 'efafcea',
      name: 'string',
      cost: 0,
      qty: 0,
      deleted: true,
    } as JSONObject,
  }),
  new AuditLog({
    id: '15',
    action: Action.INSERT_ONE,
    actedAt: new Date('2023-05-10T12:00:32.225Z'),
    actedOn: 'Product',
    actionKey: 'Product_logs',
    tenantId: tenantId,
    entityId: '143f43',
    actor: 'testUser',
    before: {
      id: 'efafcea',
      name: 'string',
      cost: 0,
      qty: 0,
      deleted: false,
    } as JSONObject,
  }),
];

{
  "openapi": "3.0.0",
  "info": {
    "title": "Bpmn Service",
    "version": "1.0.0",
    "description": "a Reusable, customizable and workflow based task service",
    "contact": {
      "name": "SourceFuse"
    }
  },
  "paths": {
    "/events/count": {
      "get": {
        "x-controller-name": "EventController",
        "x-operation-name": "count",
        "tags": [
          "EventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16002   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "events.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Event>"
                }
              }
            }
          }
        ],
        "operationId": "EventController.count"
      }
    },
    "/events/mapping": {
      "post": {
        "x-controller-name": "EventController",
        "x-operation-name": "mapEventToWorkflow",
        "tags": [
          "EventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {},
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventWorkflowMapping"
              }
            }
          }
        },
        "operationId": "EventController.mapEventToWorkflow"
      }
    },
    "/events/{id}": {
      "get": {
        "x-controller-name": "EventController",
        "x-operation-name": "findById",
        "tags": [
          "EventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Event model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16002   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events.Filter"
                }
              }
            }
          }
        ],
        "operationId": "EventController.findById"
      }
    },
    "/events": {
      "get": {
        "x-controller-name": "EventController",
        "x-operation-name": "find",
        "tags": [
          "EventController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Event model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventWithRelations"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16002   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "EventController.find"
      }
    },
    "/tasks/count": {
      "get": {
        "x-controller-name": "TaskController",
        "x-operation-name": "count",
        "tags": [
          "TaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Task model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16003   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "tasks.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Task>"
                }
              }
            }
          }
        ],
        "operationId": "TaskController.count"
      }
    },
    "/tasks/mapping": {
      "post": {
        "x-controller-name": "TaskController",
        "x-operation-name": "mapTaskToWorkflow",
        "tags": [
          "TaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {},
        "description": "\n\n| Permissions |\n| ------- |\n| 16006   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskWorkFlowMapping"
              }
            }
          }
        },
        "operationId": "TaskController.mapTaskToWorkflow"
      }
    },
    "/tasks/{taskId}/user-tasks/count": {
      "get": {
        "x-controller-name": "TaskUserTaskController",
        "x-operation-name": "count",
        "tags": [
          "TaskUserTaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Task model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16004   |\n",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "user_tasks.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<UserTask>"
                }
              }
            }
          }
        ],
        "operationId": "TaskUserTaskController.count"
      }
    },
    "/tasks/{taskId}/user-tasks/{userTaskId}/complete": {
      "patch": {
        "x-controller-name": "TaskUserTaskController",
        "x-operation-name": "completeTask",
        "tags": [
          "TaskUserTaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {},
        "description": "\n\n| Permissions |\n| ------- |\n| 16005   |\n",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "userTaskId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TaskUserTaskController.completeTask"
      }
    },
    "/tasks/{taskId}/user-tasks/{userTaskId}": {
      "get": {
        "x-controller-name": "TaskUserTaskController",
        "x-operation-name": "findById",
        "tags": [
          "TaskUserTaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "UserTask model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTaskWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16004   |\n",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "userTaskId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_tasks.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TaskUserTaskController.findById"
      }
    },
    "/tasks/{taskId}/user-tasks/{id}": {
      "delete": {
        "x-controller-name": "TaskUserTaskController",
        "x-operation-name": "deleteById",
        "tags": [
          "TaskUserTaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "UserTasks DELETE by id success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16009   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TaskUserTaskController.deleteById"
      }
    },
    "/tasks/{taskId}/user-tasks": {
      "get": {
        "x-controller-name": "TaskUserTaskController",
        "x-operation-name": "find",
        "tags": [
          "TaskUserTaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of UserTask model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserTaskWithRelations"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16004   |\n",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_tasks.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "TaskUserTaskController.find"
      },
      "delete": {
        "x-controller-name": "TaskUserTaskController",
        "x-operation-name": "delete",
        "tags": [
          "TaskUserTaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "UserTasks DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16009   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "user_tasks.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<UserTask>"
                }
              }
            }
          }
        ],
        "operationId": "TaskUserTaskController.delete"
      }
    },
    "/tasks/{id}": {
      "get": {
        "x-controller-name": "TaskController",
        "x-operation-name": "findById",
        "tags": [
          "TaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Task model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskWithRelations"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16003   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasks.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TaskController.findById"
      },
      "delete": {
        "x-controller-name": "TaskController",
        "x-operation-name": "deleteById",
        "tags": [
          "TaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Task DELETE by id success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16008   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "cascade",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "operationId": "TaskController.deleteById"
      }
    },
    "/tasks": {
      "get": {
        "x-controller-name": "TaskController",
        "x-operation-name": "find",
        "tags": [
          "TaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Task model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskWithRelations"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16003   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasks.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "TaskController.find"
      },
      "delete": {
        "x-controller-name": "TaskController",
        "x-operation-name": "delete",
        "tags": [
          "TaskController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Tasks DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| 16008   |\n",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "tasks.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Task>"
                }
              }
            }
          },
          {
            "name": "cascade",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "operationId": "TaskController.delete"
      }
    },
    "/workflows/{id}/execute": {
      "post": {
        "x-controller-name": "WorkflowController",
        "x-operation-name": "startWorkflow",
        "tags": [
          "WorkflowController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow instance"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateWorkflow   |\n| 2   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteWorkflowDto"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "WorkflowController.startWorkflow"
      }
    },
    "/workflows/{id}/version/{version}": {
      "delete": {
        "x-controller-name": "WorkflowController",
        "x-operation-name": "deleteVersionById",
        "tags": [
          "WorkflowController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Workflow DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| DeleteWorkflow   |\n| 4   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "version",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "WorkflowController.deleteVersionById"
      }
    },
    "/workflows/{id}": {
      "patch": {
        "x-controller-name": "WorkflowController",
        "x-operation-name": "updateById",
        "tags": [
          "WorkflowController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Workflow PATCH success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| UpdateWorkflow   |\n| 3   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowDtoPartial"
              }
            }
          }
        },
        "operationId": "WorkflowController.updateById"
      },
      "get": {
        "x-controller-name": "WorkflowController",
        "x-operation-name": "count",
        "tags": [
          "WorkflowController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow Model"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewWorkflow   |\n| 1   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "WorkflowController.count"
      },
      "delete": {
        "x-controller-name": "WorkflowController",
        "x-operation-name": "deleteById",
        "tags": [
          "WorkflowController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Workflow DELETE success"
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| DeleteWorkflow   |\n| 4   |\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "WorkflowController.deleteById"
      }
    },
    "/workflows": {
      "post": {
        "x-controller-name": "WorkflowController",
        "x-operation-name": "create",
        "tags": [
          "WorkflowController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| CreateWorkflow   |\n| 2   |\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewWorkflow"
              }
            }
          }
        },
        "operationId": "WorkflowController.create"
      },
      "get": {
        "x-controller-name": "WorkflowController",
        "x-operation-name": "find",
        "tags": [
          "WorkflowController"
        ],
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Workflow model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workflow"
                  }
                }
              }
            }
          }
        },
        "description": "\n\n| Permissions |\n| ------- |\n| ViewWorkflow   |\n| 1   |\n",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflows.Filter"
                }
              }
            }
          }
        ],
        "operationId": "WorkflowController.find"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Workflow": {
        "title": "Workflow",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "workflowVersion": {
            "type": "number",
            "description": "Last deployed workflow version"
          },
          "externalIdentifier": {
            "type": "string",
            "description": "The key that is used to identify the workflow in the respective workflow engine."
          },
          "name": {
            "type": "string",
            "description": "Name of the workflow"
          },
          "provider": {
            "type": "string",
            "description": "Provider could be the engine that will handle the workflow - camunda, zeebe, etc"
          },
          "inputSchema": {
            "type": "object",
            "description": "Schema used for validation during workflow execution"
          },
          "description": {
            "type": "string",
            "description": "Description of the workflow"
          }
        },
        "required": [
          "workflowVersion",
          "externalIdentifier",
          "provider",
          "inputSchema"
        ],
        "additionalProperties": false
      },
      "NewWorkflow": {
        "title": "NewWorkflow",
        "type": "object",
        "description": "(tsType: WorkflowDto, schemaOptions: { title: 'NewWorkflow' })",
        "properties": {
          "name": {
            "type": "string"
          },
          "bpmnFile": {
            "type": "string"
          },
          "inputSchema": {
            "type": "object"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "bpmnFile",
          "inputSchema"
        ],
        "additionalProperties": true,
        "x-typescript-type": "WorkflowDto"
      },
      "WorkflowDto": {
        "title": "WorkflowDto",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "bpmnFile": {
            "type": "string"
          },
          "inputSchema": {
            "type": "object"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "bpmnFile",
          "inputSchema"
        ],
        "additionalProperties": true
      },
      "WorkflowDtoPartial": {
        "title": "WorkflowDtoPartial",
        "type": "object",
        "description": "(tsType: Partial<WorkflowDto>, schemaOptions: { partial: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "bpmnFile": {
            "type": "string"
          },
          "inputSchema": {
            "type": "object"
          },
          "description": {
            "type": "string"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Partial<WorkflowDto>"
      },
      "ExecuteWorkflowDto": {
        "title": "ExecuteWorkflowDto",
        "type": "object",
        "properties": {
          "workflowVersion": {
            "type": "number"
          },
          "input": {
            "type": "object"
          }
        },
        "required": [
          "input"
        ],
        "additionalProperties": false
      },
      "EventWithRelations": {
        "title": "EventWithRelations",
        "type": "object",
        "description": "(tsType: EventWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string",
            "description": "An identifier for a particular event queued by a service or a user"
          },
          "description": {
            "type": "string",
            "description": "A short description of an event"
          },
          "source": {
            "type": "string",
            "description": "Origination of an event- can be a service or from a user"
          },
          "payload": {
            "type": "object",
            "description": "A dynamic object that contains information to be run in the workers of a bpmn engine"
          },
          "timestamp": {
            "type": "number",
            "description": "A short message to indicate the progression of the event"
          }
        },
        "required": [
          "key",
          "description",
          "source",
          "payload",
          "timestamp"
        ],
        "additionalProperties": false,
        "x-typescript-type": "EventWithRelations"
      },
      "EventWorkflowMapping": {
        "title": "EventWorkflowMapping",
        "type": "object",
        "description": "(tsType: EventWorkflow, schemaOptions: { title: 'EventWorkflowMapping' })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "eventKey": {
            "type": "string",
            "description": "An identifier for a particular event queued by a service or a user"
          },
          "workflowKey": {
            "type": "string",
            "description": "An identifier for a particular workflow"
          }
        },
        "required": [
          "eventKey",
          "workflowKey"
        ],
        "additionalProperties": false,
        "x-typescript-type": "EventWorkflow"
      },
      "UserTaskWithRelations": {
        "title": "UserTaskWithRelations",
        "type": "object",
        "description": "(tsType: UserTaskWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "taskId",
          "status",
          "externalId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserTaskWithRelations"
      },
      "TaskWithRelations": {
        "title": "TaskWithRelations",
        "type": "object",
        "description": "(tsType: TaskWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string",
            "description": "An identifier for a particular task within an event"
          },
          "name": {
            "type": "string",
            "description": "A name given by the consumer service for this task"
          },
          "description": {
            "type": "string",
            "description": "A short description of this task"
          },
          "status": {
            "type": "string",
            "description": "A short message to indicate the progression of the task"
          },
          "priority": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "assigneeId": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          },
          "externalId": {
            "type": "string"
          },
          "userTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTaskWithRelations"
            }
          }
        },
        "required": [
          "key",
          "name",
          "priority",
          "severity",
          "type",
          "metadata"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TaskWithRelations"
      },
      "TaskWorkFlowMapping": {
        "title": "TaskWorkFlowMapping",
        "type": "object",
        "description": "(tsType: TaskWorkflow, schemaOptions: { title: 'TaskWorkFlowMapping' })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "workflowKey": {
            "type": "string",
            "description": "An identifier for a particular workflow"
          },
          "taskKey": {
            "type": "string",
            "description": "An identifier for a particular task within an event"
          }
        },
        "required": [
          "workflowKey",
          "taskKey"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TaskWorkflow"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "events.Filter": {
        "type": "object",
        "title": "events.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "key": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "source": {
                    "type": "boolean"
                  },
                  "payload": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "key",
                    "description",
                    "source",
                    "payload",
                    "timestamp"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "events.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Event>"
      },
      "events.Filter1": {
        "type": "object",
        "title": "events.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "events.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "key": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "source": {
                    "type": "boolean"
                  },
                  "payload": {
                    "type": "boolean"
                  },
                  "timestamp": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "key",
                    "description",
                    "source",
                    "payload",
                    "timestamp"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "events.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Event>"
      },
      "user_tasks.Filter": {
        "type": "object",
        "title": "user_tasks.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "taskId": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "externalId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "name",
                    "taskId",
                    "status",
                    "externalId"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "user_tasks.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<UserTask>"
      },
      "user_tasks.Filter1": {
        "type": "object",
        "title": "user_tasks.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "user_tasks.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "taskId": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "externalId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "name",
                    "taskId",
                    "status",
                    "externalId"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "user_tasks.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<UserTask>"
      },
      "tasks.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "tasks.ScopeFilter"
      },
      "tasks.IncludeFilter.Items": {
        "title": "tasks.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "userTasks"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/tasks.ScopeFilter"
          }
        }
      },
      "tasks.Filter": {
        "type": "object",
        "title": "tasks.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "key": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "priority": {
                    "type": "boolean"
                  },
                  "severity": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "startDate": {
                    "type": "boolean"
                  },
                  "dueDate": {
                    "type": "boolean"
                  },
                  "endDate": {
                    "type": "boolean"
                  },
                  "assigneeId": {
                    "type": "boolean"
                  },
                  "metadata": {
                    "type": "boolean"
                  },
                  "externalId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "key",
                    "name",
                    "description",
                    "status",
                    "priority",
                    "severity",
                    "type",
                    "startDate",
                    "dueDate",
                    "endDate",
                    "assigneeId",
                    "metadata",
                    "externalId"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "tasks.Fields"
          },
          "include": {
            "title": "tasks.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/tasks.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Task>"
      },
      "tasks.Filter1": {
        "type": "object",
        "title": "tasks.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "tasks.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "key": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "boolean"
                  },
                  "priority": {
                    "type": "boolean"
                  },
                  "severity": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "startDate": {
                    "type": "boolean"
                  },
                  "dueDate": {
                    "type": "boolean"
                  },
                  "endDate": {
                    "type": "boolean"
                  },
                  "assigneeId": {
                    "type": "boolean"
                  },
                  "metadata": {
                    "type": "boolean"
                  },
                  "externalId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "key",
                    "name",
                    "description",
                    "status",
                    "priority",
                    "severity",
                    "type",
                    "startDate",
                    "dueDate",
                    "endDate",
                    "assigneeId",
                    "metadata",
                    "externalId"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "tasks.Fields"
          },
          "include": {
            "title": "tasks.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/tasks.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Task>"
      },
      "workflows.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "workflows.ScopeFilter"
      },
      "workflows.IncludeFilter.Items": {
        "title": "workflows.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string",
            "enum": [
              "workflowVersions"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/workflows.ScopeFilter"
          }
        }
      },
      "workflows.Filter": {
        "type": "object",
        "title": "workflows.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "workflows.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "workflowVersion": {
                    "type": "boolean"
                  },
                  "externalIdentifier": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "provider": {
                    "type": "boolean"
                  },
                  "inputSchema": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deleted",
                    "deletedOn",
                    "deletedBy",
                    "createdOn",
                    "modifiedOn",
                    "createdBy",
                    "modifiedBy",
                    "id",
                    "workflowVersion",
                    "externalIdentifier",
                    "name",
                    "provider",
                    "inputSchema",
                    "description"
                  ],
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "workflows.Fields"
          },
          "include": {
            "title": "workflows.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/workflows.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Workflow>"
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ]
}
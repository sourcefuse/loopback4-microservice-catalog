# Check out https://hub.docker.com/_/node to select a new base image
FROM node:14-alpine AS BUILD_IMAGE

RUN apk update && apk add curl bash && rm -rf /var/cache/apk/*
RUN curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash -s -- -b /usr/local/bin

# Set to a non-root built-in user `node`
USER node

# Create app directory (with user `node`)
RUN mkdir -p /home/node/app
WORKDIR /home/node/app

# Install app dependencies
# A wildcard is used to ensure both package.json AND package-lock.json are copied
# where available (npm@5+)
COPY --chown=node package*.json ./
# RUN npm install

# Bundle app source code
COPY --chown=node . .
RUN npm run build

# Run node prune
RUN npm prune --production
RUN /usr/local/bin/node-prune

FROM node:14-alpine
WORKDIR /home/node/app

# Copy from build image
COPY --from=BUILD_IMAGE /home/node/app/dist ./dist
COPY --from=BUILD_IMAGE /home/node/app/public ./public
COPY --from=BUILD_IMAGE /home/node/app/node_modules ./node_modules

COPY --from=BUILD_IMAGE /home/node/app/.env.example ./.env.example
COPY --from=BUILD_IMAGE /home/node/app/.env.defaults ./.env.defaults 

# Bind to all network interfaces so that it can be mapped to the host OS
ENV HOST=::
ENV PORT=3000
EXPOSE ${PORT}

CMD [ "node", "./dist/index.js" ]
apiVersion: apps/v1
kind: Deployment
metadata:
  name: socketio-service
  labels:
    app: socketio-service
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: socketio-service
  template:
    metadata:
      labels:
        app: socketio-service
      annotations:
        prometheus.io/path: /socketio-service/obf/metrics
        prometheus.io/port: '3000'
        prometheus.io/scrape: 'true'
    spec:
      containers:
        - name: notification-service
          image: IMAGE_REPO_NAME/pms-socketio-service:IMAGE_TAG_VERSION
          env:
            - name: HOST
              value: '::'
            - name: PORT
              value: '3000'
            - name: SWAGGER_USER
              value: ""
            - name: SWAGGER_PASSWORD
              value: ""
            - name: BASE_PATH
              value: '/socketio-service'
            - name: NEW_RELIC_LICENSE_KEY
              value: '7aa9c0797ca94510ec55db67d408ba7687e6d48a'
            - name: NEW_RELIC_APP_NAME
              value: 'rakuten_oasis_socketio_service_dev'
            - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
              value: 'true'
            - name: NEW_RELIC_NO_CONFIG_FILE
              value: 'true'
            - name: JAEGER_ENDPOINT
              value: 'http://simple-prod-collector:14268/api/traces'
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: socketio-service
  labels:
    run: socketio-service
spec:
  type: NodePort
  ports:
    - port: 3000
      protocol: TCP
  selector:
    app: socketio-service
